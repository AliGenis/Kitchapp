Index: app/src/main/java/com/example/kitchapp/Ingredient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport androidx.room.ColumnInfo;\r\nimport androidx.room.Entity;\r\nimport androidx.room.PrimaryKey;\r\n\r\n@Entity\r\npublic class Ingredient {\r\n\r\n    @PrimaryKey(autoGenerate = true)\r\n    private int id;\r\n\r\n    @ColumnInfo(name = \"ingredientName\")\r\n    private String name;\r\n\r\n    @ColumnInfo(name = \"ingredientQuantity\")\r\n    private int number;\r\n\r\n    @ColumnInfo(name = \"defaultBuyValue\")\r\n    private int defaultBuyValue;\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public int getNumber() {\r\n        return number;\r\n    }\r\n\r\n    public void setNumber(int number) {\r\n        this.number = number;\r\n    }\r\n\r\n    public int getDefaultBuyValue() {\r\n        return defaultBuyValue;\r\n    }\r\n\r\n    public void setDefaultBuyValue(int defaultBuyValue) {\r\n        this.defaultBuyValue = defaultBuyValue;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/Ingredient.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/Ingredient.java	(date 1608928494066)
@@ -1,5 +1,4 @@
 package com.example.kitchapp;
-
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
@@ -16,9 +15,6 @@
     @ColumnInfo(name = "ingredientQuantity")
     private int number;
 
-    @ColumnInfo(name = "defaultBuyValue")
-    private int defaultBuyValue;
-
     public int getId() {
         return id;
     }
@@ -27,27 +23,18 @@
         this.id = id;
     }
 
-    public String getName() {
-        return name;
-    }
+    public String getName(){ return name; }
 
-    public void setName(String name) {
-        this.name = name;
+    public void setName(String newName){
+        this.name = newName;
     }
 
-    public int getNumber() {
+    public int getNumber(){
         return number;
     }
 
-    public void setNumber(int number) {
+    public void setNumber(int number){
         this.number = number;
     }
 
-    public int getDefaultBuyValue() {
-        return defaultBuyValue;
-    }
-
-    public void setDefaultBuyValue(int defaultBuyValue) {
-        this.defaultBuyValue = defaultBuyValue;
-    }
 }
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Built application files\r\n*.apk\r\n*.ap_\r\n*.aab\r\n\r\n# Files for the ART/Dalvik VM\r\n*.dex\r\n\r\n# Java class files\r\n*.class\r\n\r\n# Generated files\r\nbin/\r\ngen/\r\nout/\r\n#  Uncomment the following line in case you need and you don't have the release build type files in your app\r\n# release/\r\n\r\n# Gradle files\r\n.gradle/\r\nbuild/\r\n\r\n# Local configuration file (sdk path, etc)\r\nlocal.properties\r\n\r\n# Proguard folder generated by Eclipse\r\nproguard/\r\n\r\n# Log Files\r\n*.log\r\n\r\n# Android Studio Navigation editor temp files\r\n.navigation/\r\n\r\n# Android Studio captures folder\r\ncaptures/\r\n\r\n# IntelliJ\r\n*.iml\r\n.idea/workspace.xml\r\n.idea/tasks.xml\r\n.idea/gradle.xml\r\n.idea/assetWizardSettings.xml\r\n.idea/dictionaries\r\n.idea/libraries\r\n# Android Studio 3 in .gitignore file.\r\n.idea/caches\r\n.idea/modules.xml\r\n# Comment next line if keeping position of elements in Navigation Editor is relevant for you\r\n.idea/navEditor.xml\r\n\r\n# Keystore files\r\n# Uncomment the following lines if you do not want to check your keystore files in.\r\n#*.jks\r\n#*.keystore\r\n\r\n# External native build folder generated in Android Studio 2.2 and later\r\n.externalNativeBuild\r\n\r\n# Google Services (e.g. APIs or Firebase)\r\n# google-services.json\r\n\r\n# Freeline\r\nfreeline.py\r\nfreeline/\r\nfreeline_project_description.json\r\n\r\n# fastlane\r\nfastlane/report.xml\r\nfastlane/Preview.html\r\nfastlane/screenshots\r\nfastlane/test_output\r\nfastlane/readme.md\r\n\r\n# Version control\r\nvcs.xml\r\n\r\n# lint\r\nlint/intermediates/\r\nlint/generated/\r\nlint/outputs/\r\nlint/tmp/\r\n# lint/reports/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ .gitignore	(date 1608928003655)
@@ -81,3 +81,8 @@
 lint/outputs/
 lint/tmp/
 # lint/reports/
+app/src/main/java/com/example/kitchapp/RoomDatabaseClass.java
+app/src/main/java/com/example/kitchapp/RecipeList.java
+app/src/main/java/com/example/kitchapp/Recipe.java
+*.java
+app/src/main/java/com/example/kitchapp/ui/recipes/lookIntoRecipes.java
Index: app/src/main/java/com/example/kitchapp/RoomDatabaseClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport androidx.room.Database;\r\nimport androidx.room.RoomDatabase;\r\n\r\n@Database(entities = {Ingredient.class, Recipe.class}, version = 2)\r\npublic abstract class RoomDatabaseClass extends RoomDatabase {\r\n\r\n    public abstract RecipeDao recipeDao();\r\n\r\n    public abstract IngredientDao ingredientDao();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/RoomDatabaseClass.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/RoomDatabaseClass.java	(date 1608928494072)
@@ -3,10 +3,9 @@
 import androidx.room.Database;
 import androidx.room.RoomDatabase;
 
-@Database(entities = {Ingredient.class, Recipe.class}, version = 2)
+@Database(entities = {Ingredient.class}, version = 2)
 public abstract class RoomDatabaseClass extends RoomDatabase {
 
-    public abstract RecipeDao recipeDao();
-
     public abstract IngredientDao ingredientDao();
+
 }
Index: app/src/main/java/com/example/kitchapp/RecipeDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface RecipeDao {\r\n\r\n    @Insert\r\n    void addRecipe(Recipe recipe);\r\n\r\n    @Query(\"select * from recipe\")\r\n    List<Recipe> getRecipe();\r\n\r\n    @Delete\r\n    void deleteRecipe(Recipe recipe);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/RecipeDao.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/RecipeDao.java	(date 1608928494071)
@@ -1,22 +1,23 @@
 package com.example.kitchapp;
-
 import androidx.room.Dao;
 import androidx.room.Delete;
 import androidx.room.Insert;
 import androidx.room.Query;
+import androidx.room.Update;
 
+import java.time.Period;
 import java.util.List;
 
 @Dao
 public interface RecipeDao {
 
-    @Insert
-    void addRecipe(Recipe recipe);
+        @Insert
+        void addRecipe(Recipe recipe);
 
-    @Query("select * from recipe")
-    List<Recipe> getRecipe();
+        @Query("select * from recipe")
+        public List<Recipe> getRecipe();
 
-    @Delete
-    void deleteRecipe(Recipe recipe);
+        @Delete
+        public void deleteRecipe(Recipe recipe);
 
-}
+    }
Index: app/src/main/java/com/example/kitchapp/RecipeList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//package com.example.kitchapp;\r\n//\r\n//import java.util.ArrayList;\r\n//\r\n//public class RecipeList {\r\n//\r\n//    private final ArrayList<Recipe> recipes = new ArrayList<Recipe>();\r\n//    private final ArrayList<Ingredient> Ing = new ArrayList<Ingredient>();\r\n//\r\n//    public RecipeList() {\r\n//    }\r\n//\r\n//    public void addToList(Recipe e) {\r\n//        recipes.add(e);\r\n//    }\r\n//\r\n//    public Recipe findByName(String a) {\r\n//        for (int i = 0; i < recipes.size(); i++) {\r\n//            if (recipes.get(i).getName().equalsIgnoreCase(a)) {\r\n//                return recipes.get(i);\r\n//            }\r\n//        }\r\n//        return null;\r\n//    }\r\n//\r\n//    public ArrayList<String> toArray() {\r\n//        ArrayList<String> arr = new ArrayList<String>();\r\n//        for (int i = 0; i < recipes.size(); i++) {\r\n//            arr.add(recipes.get(i).getName());\r\n//        }\r\n//        return arr;\r\n//    }\r\n//\r\n//\r\n//}\r\n//TODO: Şimdilik işe yaramıyor. Çözmek için hepsini seç + (CTRL + /) ya bas.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/RecipeList.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/RecipeList.java	(date 1608928494071)
@@ -1,36 +1,41 @@
-//package com.example.kitchapp;
-//
-//import java.util.ArrayList;
-//
-//public class RecipeList {
-//
-//    private final ArrayList<Recipe> recipes = new ArrayList<Recipe>();
-//    private final ArrayList<Ingredient> Ing = new ArrayList<Ingredient>();
-//
-//    public RecipeList() {
-//    }
-//
-//    public void addToList(Recipe e) {
-//        recipes.add(e);
-//    }
-//
-//    public Recipe findByName(String a) {
-//        for (int i = 0; i < recipes.size(); i++) {
-//            if (recipes.get(i).getName().equalsIgnoreCase(a)) {
-//                return recipes.get(i);
-//            }
-//        }
-//        return null;
-//    }
-//
-//    public ArrayList<String> toArray() {
-//        ArrayList<String> arr = new ArrayList<String>();
-//        for (int i = 0; i < recipes.size(); i++) {
-//            arr.add(recipes.get(i).getName());
-//        }
-//        return arr;
-//    }
-//
-//
-//}
-//TODO: Şimdilik işe yaramıyor. Çözmek için hepsini seç + (CTRL + /) ya bas.
+package com.example.kitchapp;
+
+import java.util.ArrayList;
+
+public class RecipeList {
+
+    private ArrayList<Recipe> recipes = new ArrayList<Recipe>();
+    private ArrayList<Ingredient> Ing = new ArrayList<Ingredient>();
+
+   /** public RecipeList(){
+//        Ing.add(new Ingredient("Egg",1));
+        recipes.add(new Recipe( "Boiled Egg",
+                "Boil the eggs for about 5 to 20 mins according to your preference",
+                Ing,
+                15,
+                15,
+                false ));
+    }**/
+
+    public void addToList( Recipe e ){
+        recipes.add( e );
+    }
+
+    public Recipe findByName( String a ){
+            for ( int i = 0; i<recipes.size(); i++ ){
+                if ( recipes.get(i).getName().equalsIgnoreCase( a ) ) {
+                    return recipes.get(i);
+                }
+            } return null;
+    }
+
+    public ArrayList<String> toArray(){
+        ArrayList<String> arr = new ArrayList<String>();
+        for ( int i =0; i<recipes.size(); i++ ){
+            arr.add( recipes.get(i).getName() );
+        }
+    return arr;
+    }
+
+
+}
Index: app/src/main/res/layout/fragment_recipes_item.xml
===================================================================
--- app/src/main/res/layout/fragment_recipes_item.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_recipes_item.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/singleRecipesItemLayout"
-    android:layout_width="match_parent"
-    android:layout_height="70dp">
-
-    <TextView
-        android:id="@+id/recipeName"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginStart="15dp"
-        android:layout_marginEnd="15dp"
-        android:layout_marginTop="10dp"
-        android:layout_marginBottom="10dp"
-        android:gravity="center"
-        android:textSize="24sp"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ui/fridge/RecyclerAdapter.java
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/fridge/RecyclerAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/fridge/RecyclerAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,120 +0,0 @@
-package com.example.kitchapp.ui.fridge;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageButton;
-import android.widget.TextView;
-
-import androidx.annotation.NonNull;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.example.kitchapp.Ingredient;
-import com.example.kitchapp.MainActivity;
-import com.example.kitchapp.R;
-
-import java.util.List;
-
-public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerAdapter.FridgeViewHolder> {
-
-    private final List<Ingredient> list;
-
-    public RecyclerAdapter(List<Ingredient> items) {
-        list = items;
-    }
-
-    @NonNull
-    @Override
-    public FridgeViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View view = LayoutInflater.from(parent.getContext())
-                .inflate(R.layout.fragment_fridge_item, parent, false);
-        FridgeViewHolder fridgeViewHolder = new FridgeViewHolder(view);
-        return fridgeViewHolder;
-    }
-
-    @Override
-    public void onBindViewHolder(final FridgeViewHolder holder, int position) {
-        holder.ingredient = list.get(position);
-        holder.tvName.setText(list.get(position).getName());
-        holder.tvNumber.setText(Integer.toString(list.get(position).getNumber()));
-    }
-
-    @Override
-    public int getItemCount() {
-        return list.size();
-    }
-
-    public class FridgeViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
-        public final TextView tvName;
-        public final TextView tvNumber;
-        public Ingredient ingredient;
-        public ImageButton btDelete, plusButton, minusButton;
-
-        public FridgeViewHolder(View view) {
-            super(view);
-            tvName = (TextView) view.findViewById(R.id.fridgeItemName);
-            tvNumber = (TextView) view.findViewById(R.id.fridgeItemNumber);
-            btDelete = view.findViewById(R.id.fridgeDeleteButton);
-            plusButton = view.findViewById(R.id.plusButton);
-            minusButton = view.findViewById(R.id.minusButton);
-            btDelete.setOnClickListener(this);
-            plusButton.setOnClickListener(this);
-            minusButton.setOnClickListener(this);
-        }
-
-        public TextView getTvName() {
-            return tvName;
-        }
-
-        public TextView getTvNumber() {
-            return tvNumber;
-        }
-
-        public Ingredient getIngredient() {
-            return ingredient;
-        }
-
-        @Override
-        public String toString() {
-            return super.toString() + "'" + tvName.getText() + "'"
-                    + " '" + tvNumber.getText() + "'";
-        }
-
-        @Override
-        public void onClick(View v) {
-            Ingredient ingredient;
-            int ID, number;
-            String name;
-            ingredient = new Ingredient();
-            ID = list.get(getAdapterPosition()).getId();
-            name = list.get(getAdapterPosition()).getName();
-            number = list.get(getAdapterPosition()).getNumber();
-            ingredient.setId(ID);
-            ingredient.setName(name);
-            ingredient.setNumber(number);
-
-            switch (v.getId()) {
-                case (R.id.fridgeDeleteButton):
-                    MainActivity.roomDatabaseClass.ingredientDao().deleteIngredient(ingredient);
-                    MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
-                            new FridgeFragment(), null).commit();
-                    break;
-                case (R.id.plusButton):
-                    number++;
-                    ingredient.setNumber(number);
-                    MainActivity.roomDatabaseClass.ingredientDao().updateIngredient(ingredient);
-                    MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
-                            new FridgeFragment(), null).commit();
-                    break;
-                case (R.id.minusButton):
-                    number--;
-                    ingredient.setNumber(number);
-                    MainActivity.roomDatabaseClass.ingredientDao().updateIngredient(ingredient);
-                    MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
-                            new FridgeFragment(), null).commit();
-                    break;
-
-            }
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ui/fridge/FridgeFragment.java
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/fridge/FridgeFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/fridge/FridgeFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,53 +0,0 @@
-package com.example.kitchapp.ui.fridge;
-
-import android.os.Bundle;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-
-import androidx.annotation.NonNull;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.example.kitchapp.Ingredient;
-import com.example.kitchapp.MainActivity;
-import com.example.kitchapp.R;
-
-import java.util.List;
-
-public class FridgeFragment extends Fragment implements View.OnClickListener {
-
-    RecyclerAdapter recyclerAdapter;
-    Button btAddData;
-    private RecyclerView recyclerView;
-    private RecyclerView.LayoutManager layoutManager;
-
-    public View onCreateView(@NonNull LayoutInflater inflater,
-                             ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_fridge, container, false);
-
-        recyclerView = view.findViewById(R.id.fridgeRecyclerView);
-        layoutManager = new LinearLayoutManager(getActivity());
-        recyclerView.setLayoutManager(layoutManager);
-        List<Ingredient> list = MainActivity.roomDatabaseClass.ingredientDao().getIngredient();
-        recyclerAdapter = new RecyclerAdapter(list);
-        recyclerView.setAdapter(recyclerAdapter);
-
-        btAddData = view.findViewById(R.id.addToFridgeButton);
-        btAddData.setOnClickListener(this);
-
-        return view;
-    }
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()) {
-            case (R.id.addToFridgeButton):
-                MainActivity.fragmentManager.beginTransaction().replace(R.id.Container, new AddDataFragment()
-                        , null).addToBackStack(null).commit();
-                break;
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ui/shoppinglist/MyShoppingListRecyclerViewAdapter.java
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/shoppinglist/MyShoppingListRecyclerViewAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/shoppinglist/MyShoppingListRecyclerViewAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,107 +0,0 @@
-package com.example.kitchapp.ui.shoppinglist;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.CheckBox;
-import android.widget.EditText;
-import android.widget.ImageButton;
-
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.example.kitchapp.Ingredient;
-import com.example.kitchapp.MainActivity;
-import com.example.kitchapp.R;
-
-import java.util.List;
-
-public class MyShoppingListRecyclerViewAdapter extends RecyclerView.Adapter<MyShoppingListRecyclerViewAdapter.ViewHolder> {
-
-    private final List<Ingredient> list;
-
-    public MyShoppingListRecyclerViewAdapter(List<Ingredient> items) {
-        list = items;
-    }
-
-    @Override
-    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View view = LayoutInflater.from(parent.getContext())
-                .inflate(R.layout.fragment_shopping_item, parent, false);
-        return new ViewHolder(view);
-    }
-
-    @Override
-    public void onBindViewHolder(final ViewHolder holder, int position) {
-        holder.ingredient = list.get(position);
-        holder.checkBox.setText(list.get(position).getName());
-        holder.number.setText(list.get(position).getDefaultBuyValue());
-    }
-
-    @Override
-    public int getItemCount() {
-        return list.size();
-    }
-
-    public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
-        public final View mView;
-        public Ingredient ingredient;
-        public ImageButton plusButton, minusButton;
-        public EditText number;
-        public CheckBox checkBox;
-
-        public ViewHolder(View view) {
-            super(view);
-            mView = view;
-            plusButton = view.findViewById(R.id.plus_in_shopping);
-            minusButton = view.findViewById(R.id.minus_in_shopping);
-            number = view.findViewById(R.id.number_in_shopping);
-            checkBox = view.findViewById(R.id.shop_checkbox);
-
-            plusButton.setOnClickListener(this);
-            minusButton.setOnClickListener(this);
-            number.setOnClickListener(this);
-            checkBox.setOnClickListener(this);
-
-        }
-
-        public void onClick(View v) {
-            Ingredient ingredient;
-            int ID, number;
-            String name;
-            ingredient = new Ingredient();
-            ID = list.get(getAdapterPosition()).getId();
-            name = list.get(getAdapterPosition()).getName();
-            number = list.get(getAdapterPosition()).getNumber();
-            ingredient.setId(ID);
-            ingredient.setName(name);
-            ingredient.setNumber(number);
-
-            switch (v.getId()) {
-
-                case (R.id.plus_in_shopping):
-                    number++;
-                    ingredient.setNumber(number);
-                    MainActivity.roomDatabaseClass.ingredientDao().updateIngredient(ingredient);
-                    MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
-                            new ShoppingListFragment(), null).commit();
-                    break;
-
-                case (R.id.minus_in_shopping):
-                    number--;
-                    ingredient.setNumber(number);
-                    MainActivity.roomDatabaseClass.ingredientDao().updateIngredient(ingredient);
-                    MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
-                            new ShoppingListFragment(), null).commit();
-                    break;
-
-            }
-
-
-        }
-
-        @Override
-        public String toString() {
-            return super.toString() + " '" + checkBox.getText() + "'";
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_a_recipe.xml
===================================================================
--- app/src/main/res/layout/fragment_a_recipe.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_a_recipe.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,64 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/recipesFragmentConstrarintLayout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    tools:context="com.example.kitchapp.searchview.RecipesFragment">
-
-
-    <ImageView
-        android:id="@+id/imageView2"
-        android:layout_width="388dp"
-        android:layout_height="194dp"
-        android:layout_marginTop="104dp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:srcCompat="@tools:sample/backgrounds/scenic" />
-
-    <TextView
-        android:id="@+id/recipeTitle"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="48dp"
-        android:text="Change Me with Recipe Title..."
-        android:textAlignment="center"
-        android:textSize="24sp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-
-    <TextView
-        android:id="@+id/recipeText"
-        android:layout_width="0dp"
-        android:layout_height="280dp"
-        android:layout_marginStart="48dp"
-        android:layout_marginTop="324dp"
-        android:layout_marginEnd="48dp"
-        android:text="RecipeText goes here..."
-        android:textColor="#000000"
-        android:textSize="30sp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-
-    <ImageButton
-        android:id="@+id/dislikeButton"
-        android:layout_width="89dp"
-        android:layout_height="61dp"
-        android:layout_marginBottom="44dp"
-        android:background="@android:color/background_light"
-        android:src="@drawable/ic_dislike"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
-
-
Index: app/src/main/java/com/example/kitchapp/ui/shoppinglist/ShoppingListFragment.java
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/shoppinglist/ShoppingListFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/shoppinglist/ShoppingListFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,38 +0,0 @@
-package com.example.kitchapp.ui.shoppinglist;
-
-import android.os.Bundle;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import androidx.annotation.NonNull;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.example.kitchapp.Ingredient;
-import com.example.kitchapp.MainActivity;
-import com.example.kitchapp.R;
-
-import java.util.List;
-
-public class ShoppingListFragment extends Fragment {
-
-    MyShoppingListRecyclerViewAdapter recyclerAdapter;
-    private RecyclerView recyclerView;
-    private RecyclerView.LayoutManager layoutManager;
-
-    public View onCreateView(@NonNull LayoutInflater inflater,
-                             ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_shopping_item_list, container, false);
-
-        recyclerView = view.findViewById(R.id.list);
-        layoutManager = new LinearLayoutManager(getActivity());
-        recyclerView.setLayoutManager(layoutManager);
-        List<Ingredient> ingredientList = MainActivity.roomDatabaseClass.ingredientDao().getIngredient();
-        recyclerAdapter = new MyShoppingListRecyclerViewAdapter(ingredientList);
-        recyclerView.setAdapter(recyclerAdapter);
-
-        return view;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ui/recipes/RecyclerAdapter.java
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/recipes/RecyclerAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/recipes/RecyclerAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,71 +0,0 @@
-package com.example.kitchapp.ui.recipes;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import androidx.annotation.NonNull;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.example.kitchapp.R;
-import com.example.kitchapp.Recipe;
-
-import java.util.List;
-
-public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerAdapter.RecipesViewHolder> {
-
-    private final List<Recipe> list;
-
-    public RecyclerAdapter(List<Recipe> items) {
-        list = items;
-    }
-
-    @NonNull
-    @Override
-    public RecyclerAdapter.RecipesViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View view = LayoutInflater.from(parent.getContext())
-                .inflate(R.layout.fragment_recipes_item, parent, false);
-        com.example.kitchapp.ui.recipes.RecyclerAdapter.RecipesViewHolder recipesViewHolder = new RecyclerAdapter.RecipesViewHolder(view);
-        return recipesViewHolder;
-    }
-
-    @Override
-    public void onBindViewHolder(final RecyclerAdapter.RecipesViewHolder holder, int position) {
-        holder.recipe = list.get(position);
-        holder.tvName.setText(list.get(position).getName());
-    }
-
-    @Override
-    public int getItemCount() {
-        return list.size();
-    }
-
-    public class RecipesViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
-        public final TextView tvName;
-        public Recipe recipe;
-
-        public RecipesViewHolder(View view) {
-            super(view);
-            tvName = (TextView) view.findViewById(R.id.recipeName);
-        }
-
-        public TextView getTvName() {
-            return tvName;
-        }
-
-        public Recipe getRecipe() {
-            return recipe;
-        }
-
-        @Override
-        public String toString() {
-            return super.toString() + " '" + tvName.getText() + "'";
-        }
-
-        @Override
-        public void onClick(View v) {
-            //If button added, implement this...
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ShoppingIngredientDao.java
===================================================================
--- app/src/main/java/com/example/kitchapp/ShoppingIngredientDao.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ShoppingIngredientDao.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
@@ -1,24 +0,0 @@
-package com.example.kitchapp;
-
-import androidx.room.Dao;
-import androidx.room.Delete;
-import androidx.room.Insert;
-import androidx.room.Query;
-import androidx.room.Update;
-
-import java.util.List;
-
-@Dao
-public interface ShoppingIngredientDao {
-    @Insert
-    void addShopIngredient(Ingredient ingredient);
-
-    @Query("select * from ingredient")
-    List<Ingredient> getIngredient();
-
-    @Delete
-    void deleteShopIngredient(Ingredient ingredient);
-
-    @Update
-    void updateShopIngredient(Ingredient ingredient);
-}
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/relativeLayout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/Container\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginBottom=\"3dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/bottomNavigationView\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/bottomNavigationView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"#fff\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:menu=\"@menu/bottom_menu\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/activity_main.xml	(date 1608928494077)
@@ -1,26 +1,27 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/relativeLayout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".MainActivity">
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+xmlns:app="http://schemas.android.com/apk/res-auto"
+xmlns:tools="http://schemas.android.com/tools"
+android:layout_width="match_parent"
+android:layout_height="match_parent"
+tools:context=".MainActivity">
 
     <FrameLayout
-        android:id="@+id/Container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginBottom="3dp"
-        app:layout_constraintBottom_toTopOf="@+id/bottomNavigationView"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        android:id="@+id/fragment_container"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_above="@id/bottomNavigationView" />
 
     <com.google.android.material.bottomnavigation.BottomNavigationView
         android:id="@+id/bottomNavigationView"
-        android:layout_width="wrap_content"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentBottom="true"
+        android:layout_marginStart="2dp"
+        android:layout_marginEnd="1dp"
+        android:layout_marginBottom="3dp"
         android:background="#fff"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
@@ -28,4 +29,6 @@
         app:menu="@menu/bottom_menu" />
 
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_suggestion_screen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"660dp\"\r\n    tools:context=\".ui.suggestion.SuggestionScreen\">\r\n\r\n\r\n    <TabHost\r\n        android:layout_width=\"366dp\"\r\n        android:layout_height=\"252dp\"\r\n        android:layout_gravity=\"center_horizontal\"\r\n        android:layout_marginTop=\"250dp\">\r\n        <!--android:background=\"@drawable/suggestion_rectangle\"-->\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TabWidget\r\n                android:id=\"@android:id/tabs\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:focusable=\"auto\"\r\n                android:focusableInTouchMode=\"true\"\r\n                android:visibility=\"visible\"\r\n                tools:visibility=\"visible\" />\r\n\r\n            <FrameLayout\r\n                android:id=\"@android:id/tabcontent\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/Ingredients\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/Recipie\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\" />\r\n\r\n            </FrameLayout>\r\n        </LinearLayout>\r\n    </TabHost>\r\n\r\n    <TextView\r\n        android:id=\"@+id/suggestedMealName\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center_horizontal\"\r\n        android:text=\"@string/suggested_meal_name\"\r\n        tools:layout_marginTop=\"25dp\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/suggestion_research_button\"\r\n        android:layout_width=\"81dp\"\r\n        android:layout_height=\"76dp\"\r\n        android:layout_marginStart=\"250dp\"\r\n        android:layout_marginTop=\"590dp\"\r\n        android:background=\"@android:color/background_light\"\r\n        android:src=\"@drawable/suggestion_research_button\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/suggestion_tick_button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"75dp\"\r\n        android:layout_marginTop=\"600dp\"\r\n        android:background=\"@android:color/background_light\"\r\n        android:src=\"@drawable/suggestion_tick_button\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/timeText\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"35dp\"\r\n        android:layout_marginStart=\"50dp\"\r\n        android:layout_marginTop=\"545dp\"\r\n        android:drawableStart=\"@drawable/ic_time_icon\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/calText\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"230dp\"\r\n        android:layout_marginTop=\"545dp\"\r\n        android:drawableStart=\"@drawable/ic_calorie_icon\"\r\n        android:text=\"@string/suggested_calorie\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_suggestion_screen.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_suggestion_screen.xml	(date 1608928494086)
@@ -1,9 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="660dp"
-    tools:context=".ui.suggestion.SuggestionScreen">
+    tools:context=".ui.suggestion.tabs.SuggestionScreen">
 
 
     <TabHost
@@ -55,8 +56,8 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_gravity="center_horizontal"
-        android:text="@string/suggested_meal_name"
-        tools:layout_marginTop="25dp" />
+        tools:layout_marginTop="25dp"
+        android:text="@string/suggested_meal_name" />
 
     <ImageButton
         android:id="@+id/suggestion_research_button"
@@ -78,19 +79,19 @@
 
     <TextView
         android:id="@+id/timeText"
+        android:drawableStart="@drawable/ic_time_icon"
         android:layout_width="wrap_content"
         android:layout_height="35dp"
         android:layout_marginStart="50dp"
-        android:layout_marginTop="545dp"
-        android:drawableStart="@drawable/ic_time_icon" />
+        android:layout_marginTop="545dp" />
 
     <TextView
         android:id="@+id/calText"
+        android:drawableStart="@drawable/ic_calorie_icon"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginStart="230dp"
         android:layout_marginTop="545dp"
-        android:drawableStart="@drawable/ic_calorie_icon"
         android:text="@string/suggested_calorie" />
 
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_recipes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.recipes.RecipesFragment\">\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recipesRecyclerView\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginTop=\"44dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/recipesTitle\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:drawableLeft=\"@drawable/ic_baseline_restaurant_24\"\r\n        android:text=\" RECIPES\"\r\n        android:textSize=\"32sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_recipes.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_recipes.xml	(date 1608928494080)
@@ -1,31 +1,60 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".ui.recipes.RecipesFragment">
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/recipesRecyclerView"
-        android:layout_width="0dp"
-        android:layout_height="match_parent"
-        android:layout_marginTop="44dp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.example.kitchapp.searchview.RecipesFragment">
+
+
+    <ImageView
+        android:id="@+id/imageView2"
+        android:layout_width="388dp"
+        android:layout_height="194dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentEnd="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginStart="10dp"
+        android:layout_marginTop="181dp"
+        android:layout_marginEnd="14dp"
+        tools:srcCompat="@tools:sample/backgrounds/scenic" />
 
     <TextView
-        android:id="@+id/recipesTitle"
+        android:id="@+id/textView19"
+        android:layout_width="334dp"
+        android:layout_height="46dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginStart="42dp"
+        android:layout_marginTop="117dp"
+        android:text="TextView" />
+
+    <TextView
+        android:id="@+id/textView20"
+        android:layout_width="285dp"
+        android:layout_height="154dp"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginBottom="188dp"
+        android:text="TextView" />
+
+    <Button
+        android:id="@+id/button2"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:drawableLeft="@drawable/ic_baseline_restaurant_24"
-        android:text=" RECIPES"
-        android:textSize="32sp"
-        android:textStyle="bold"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        android:layout_alignParentStart="true"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginStart="152dp"
+        android:layout_marginBottom="94dp"
+        android:text="EAT THIS" />
+
+</RelativeLayout>
+
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/RecipeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.kitchapp.dummy.DummyContent;\r\n\r\n/**\r\n * A fragment representing a list of Items.\r\n */\r\npublic class RecipeFragment extends Fragment {\r\n\r\n    // TODO: Customize parameter argument names\r\n    private static final String ARG_COLUMN_COUNT = \"column-count\";\r\n    // TODO: Customize parameters\r\n    private int mColumnCount = 1;\r\n\r\n    /**\r\n     * Mandatory empty constructor for the fragment manager to instantiate the\r\n     * fragment (e.g. upon screen orientation changes).\r\n     */\r\n    public RecipeFragment() {\r\n    }\r\n\r\n    // TODO: Customize parameter initialization\r\n    @SuppressWarnings(\"unused\")\r\n    public static RecipeFragment newInstance(int columnCount) {\r\n        RecipeFragment fragment = new RecipeFragment();\r\n        Bundle args = new Bundle();\r\n        args.putInt(ARG_COLUMN_COUNT, columnCount);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        if (getArguments() != null) {\r\n            mColumnCount = getArguments().getInt(ARG_COLUMN_COUNT);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_recipe_list, container, false);\r\n\r\n        // Set the adapter\r\n        if (view instanceof RecyclerView) {\r\n            Context context = view.getContext();\r\n            RecyclerView recyclerView = (RecyclerView) view;\r\n            if (mColumnCount <= 1) {\r\n                recyclerView.setLayoutManager(new LinearLayoutManager(context));\r\n            } else {\r\n                recyclerView.setLayoutManager(new GridLayoutManager(context, mColumnCount));\r\n            }\r\n            recyclerView.setAdapter(new MyItemRecyclerViewAdapter(DummyContent.ITEMS));\r\n        }\r\n        return view;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/RecipeFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/RecipeFragment.java	(date 1608928494071)
@@ -2,15 +2,16 @@
 
 import android.content.Context;
 import android.os.Bundle;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
 
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
 import com.example.kitchapp.dummy.DummyContent;
 
 /**
Index: app/src/main/java/com/example/kitchapp/MyItemRecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.kitchapp.dummy.DummyContent.DummyItem;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * {@link RecyclerView.Adapter} that can display a {@link DummyItem}.\r\n * TODO: Replace the implementation with code for your data type.\r\n */\r\npublic class MyItemRecyclerViewAdapter extends RecyclerView.Adapter<MyItemRecyclerViewAdapter.ViewHolder> {\r\n\r\n    private final List<DummyItem> mValues;\r\n\r\n    public MyItemRecyclerViewAdapter(List<DummyItem> items) {\r\n        mValues = items;\r\n    }\r\n\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.fragment_recipe, parent, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(final ViewHolder holder, int position) {\r\n        holder.mItem = mValues.get(position);\r\n        holder.mIdView.setText(mValues.get(position).id);\r\n        holder.mContentView.setText(mValues.get(position).content);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mValues.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n        public final View mView;\r\n        public final TextView mIdView;\r\n        public final TextView mContentView;\r\n        public DummyItem mItem;\r\n\r\n        public ViewHolder(View view) {\r\n            super(view);\r\n            mView = view;\r\n            mIdView = (TextView) view.findViewById(R.id.item_number);\r\n            mContentView = (TextView) view.findViewById(R.id.content);\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return super.toString() + \" '\" + mContentView.getText() + \"'\";\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/MyItemRecyclerViewAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/MyItemRecyclerViewAdapter.java	(date 1608928494069)
@@ -1,12 +1,12 @@
 package com.example.kitchapp;
 
+import androidx.recyclerview.widget.RecyclerView;
+
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
-import androidx.recyclerview.widget.RecyclerView;
-
 import com.example.kitchapp.dummy.DummyContent.DummyItem;
 
 import java.util.List;
Index: app/src/main/res/layout/fragment_shopping_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"horizontal\">\r\n\r\n    <CheckBox\r\n        android:id=\"@+id/shop_checkbox\"\r\n        android:layout_width=\"169dp\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"CheckBox\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/plus_in_shopping\"\r\n        android:layout_width=\"13dp\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_weight=\"1\"\r\n        android:background=\"@null\"\r\n        app:srcCompat=\"@drawable/ic_baseline_add_circle_24\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/number_in_shopping\"\r\n        android:layout_width=\"13dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:ems=\"10\"\r\n        android:inputType=\"numberDecimal\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/minus_in_shopping\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_weight=\"1\"\r\n        android:background=\"@null\"\r\n        app:srcCompat=\"@drawable/ic_baseline_remove_circle_24\" />\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_shopping_item.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_shopping_item.xml	(date 1608928494082)
@@ -6,14 +6,14 @@
     android:orientation="horizontal">
 
     <CheckBox
-        android:id="@+id/shop_checkbox"
+        android:id="@+id/checkBox4"
         android:layout_width="169dp"
         android:layout_height="match_parent"
         android:layout_weight="1"
         android:text="CheckBox" />
 
     <ImageButton
-        android:id="@+id/plus_in_shopping"
+        android:id="@+id/imageButton2"
         android:layout_width="13dp"
         android:layout_height="match_parent"
         android:layout_weight="1"
@@ -21,7 +21,7 @@
         app:srcCompat="@drawable/ic_baseline_add_circle_24" />
 
     <EditText
-        android:id="@+id/number_in_shopping"
+        android:id="@+id/editTextNumberDecimal"
         android:layout_width="13dp"
         android:layout_height="wrap_content"
         android:layout_weight="1"
@@ -29,7 +29,7 @@
         android:inputType="numberDecimal" />
 
     <ImageButton
-        android:id="@+id/minus_in_shopping"
+        android:id="@+id/imageButton3"
         android:layout_width="wrap_content"
         android:layout_height="match_parent"
         android:layout_weight="1"
Index: app/src/main/res/layout/fragment_shopping_item_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.fridge.FridgeFragment\">\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/scrollView2\"\r\n        android:layout_width=\"408dp\"\r\n        android:layout_height=\"464dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/list\"\r\n            android:name=\"com.example.kitchapp.ShoppingListFragment\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layoutManager=\"LinearLayoutManager\"\r\n            tools:context=\".ui.shoppinglist.ShoppingListFragment\"\r\n            tools:listitem=\"@layout/fragment_shopping_item\" />\r\n    </ScrollView>\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@android:color/holo_green_light\"\r\n        android:text=\"BUY\"\r\n        android:textColor=\"@android:color/holo_red_dark\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/scrollView2\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView3\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:src=\"@drawable/ic_shoppinglist\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/scrollView2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_shopping_item_list.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_shopping_item_list.xml	(date 1608928494083)
@@ -21,7 +21,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             app:layoutManager="LinearLayoutManager"
-            tools:context=".ui.shoppinglist.ShoppingListFragment"
+            tools:context=".ShoppingListFragment"
             tools:listitem="@layout/fragment_shopping_item" />
     </ScrollView>
 
@@ -45,5 +45,4 @@
         app:layout_constraintBottom_toTopOf="@+id/scrollView2"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+        app:layout_constraintTop_toTopOf="parent" />
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ItemFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.kitchapp.dummy.DummyContent;\r\n\r\n/**\r\n * A fragment representing a list of Items.\r\n */\r\npublic class ItemFragment extends Fragment {\r\n\r\n    // TODO: Customize parameter argument names\r\n    private static final String ARG_COLUMN_COUNT = \"column-count\";\r\n    // TODO: Customize parameters\r\n    private int mColumnCount = 1;\r\n\r\n    /**\r\n     * Mandatory empty constructor for the fragment manager to instantiate the\r\n     * fragment (e.g. upon screen orientation changes).\r\n     */\r\n    public ItemFragment() {\r\n    }\r\n\r\n    // TODO: Customize parameter initialization\r\n    @SuppressWarnings(\"unused\")\r\n    public static ItemFragment newInstance(int columnCount) {\r\n        ItemFragment fragment = new ItemFragment();\r\n        Bundle args = new Bundle();\r\n        args.putInt(ARG_COLUMN_COUNT, columnCount);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        if (getArguments() != null) {\r\n            mColumnCount = getArguments().getInt(ARG_COLUMN_COUNT);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_recipes_item_list, container, false);\r\n\r\n        // Set the adapter\r\n        if (view instanceof RecyclerView) {\r\n            Context context = view.getContext();\r\n            RecyclerView recyclerView = (RecyclerView) view;\r\n            if (mColumnCount <= 1) {\r\n                recyclerView.setLayoutManager(new LinearLayoutManager(context));\r\n            } else {\r\n                recyclerView.setLayoutManager(new GridLayoutManager(context, mColumnCount));\r\n            }\r\n            recyclerView.setAdapter(new MyRecipeItemRecyclerViewAdapter(DummyContent.ITEMS));\r\n        }\r\n        return view;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ItemFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ItemFragment.java	(date 1608928494068)
@@ -2,15 +2,16 @@
 
 import android.content.Context;
 import android.os.Bundle;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
 
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
 import com.example.kitchapp.dummy.DummyContent;
 
 /**
Index: app/src/main/res/layout/fragment_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"horizontal\">\r\n\r\n    <Button\r\n        android:id=\"@+id/button7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"20\"\r\n        android:text=\"Recipe\" />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_item.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_item.xml	(date 1608928494080)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:orientation="horizontal">
Index: app/src/main/java/com/example/kitchapp/MyRecipeItemRecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.kitchapp.dummy.DummyContent.DummyItem;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * {@link RecyclerView.Adapter} that can display a {@link DummyItem}.\r\n * TODO: Replace the implementation with code for your data type.\r\n */\r\npublic class MyRecipeItemRecyclerViewAdapter extends RecyclerView.Adapter<MyRecipeItemRecyclerViewAdapter.ViewHolder> {\r\n\r\n    private final List<DummyItem> mValues;\r\n\r\n    public MyRecipeItemRecyclerViewAdapter(List<DummyItem> items) {\r\n        mValues = items;\r\n    }\r\n\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.fragment_item, parent, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(final ViewHolder holder, int position) {\r\n        holder.mItem = mValues.get(position);\r\n        holder.mIdView.setText(mValues.get(position).id);\r\n        holder.mContentView.setText(mValues.get(position).content);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mValues.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n        public final View mView;\r\n        public final TextView mIdView;\r\n        public final TextView mContentView;\r\n        public DummyItem mItem;\r\n\r\n        public ViewHolder(View view) {\r\n            super(view);\r\n            mView = view;\r\n            mIdView = (TextView) view.findViewById(R.id.item_number);\r\n            mContentView = (TextView) view.findViewById(R.id.content);\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return super.toString() + \" '\" + mContentView.getText() + \"'\";\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/MyRecipeItemRecyclerViewAdapter.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/MyRecipeItemRecyclerViewAdapter.java	(date 1608928494070)
@@ -1,12 +1,12 @@
 package com.example.kitchapp;
 
+import androidx.recyclerview.widget.RecyclerView;
+
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
-import androidx.recyclerview.widget.RecyclerView;
-
 import com.example.kitchapp.dummy.DummyContent.DummyItem;
 
 import java.util.List;
Index: app/src/main/res/layout/fragment_recipes_item_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.fridge.FridgeFragment\">\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/scrollView2\"\r\n        android:layout_width=\"408dp\"\r\n        android:layout_height=\"464dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.79\">\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/list\"\r\n            android:name=\"com.example.kitchapp.RecipesListFragment\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layoutManager=\"LinearLayoutManager\"\r\n            tools:context=\".RecipeListFragment\"\r\n            tools:listitem=\"@layout/fragment_item\" />\r\n    </ScrollView>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView3\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:src=\"@drawable/ic_recipes\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/scrollView2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.218\" />\r\n\r\n    <SearchView\r\n        android:id=\"@+id/searchView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:iconifiedByDefault=\"false\"\r\n        android:queryHint=\"Search Here\"\r\n        app:actionViewClass=\"androidx.appcompat.widget.SearchView\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/scrollView2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView3\"\r\n        app:layout_constraintVertical_bias=\"0.553\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_recipes_item_list.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_recipes_item_list.xml	(date 1608928494081)
@@ -53,4 +53,4 @@
         app:layout_constraintTop_toBottomOf="@+id/imageView3"
         app:layout_constraintVertical_bias="0.553" />
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+    </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ui/signup/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp.ui.signup;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.kitchapp.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link SignUp#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class SignUp extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public SignUp() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment SignUp.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static SignUp newInstance(String param1, String param2) {\r\n        SignUp fragment = new SignUp();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_sign_up, container, false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/signup/SignUp.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/signup/SignUp.java	(date 1608928494076)
@@ -1,12 +1,13 @@
 package com.example.kitchapp.ui.signup;
 
 import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
-import androidx.fragment.app.Fragment;
-
 import com.example.kitchapp.R;
 
 /**
Index: app/src/main/java/com/example/kitchapp/ui/settings/SettingsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp.ui.settings;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.kitchapp.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link SettingsFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class SettingsFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public SettingsFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment SettingsFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static SettingsFragment newInstance(String param1, String param2) {\r\n        SettingsFragment fragment = new SettingsFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_settings, container, false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/settings/SettingsFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/settings/SettingsFragment.java	(date 1608928494075)
@@ -1,12 +1,13 @@
 package com.example.kitchapp.ui.settings;
 
 import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
-import androidx.fragment.app.Fragment;
-
 import com.example.kitchapp.R;
 
 /**
Index: app/src/main/res/layout/fragment_suggestion.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.suggestion.SuggestionFragment\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/suggestionLinearLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_suggestion\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:layout_marginBottom=\"12dp\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:textAlignment=\"center\"\r\n            android:textSize=\"20sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <com.google.android.material.appbar.AppBarLayout\r\n            android:id=\"@+id/appBarLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <com.google.android.material.tabs.TabLayout\r\n                android:id=\"@+id/tabLayout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n            </com.google.android.material.tabs.TabLayout>\r\n\r\n        </com.google.android.material.appbar.AppBarLayout>\r\n\r\n        <androidx.viewpager.widget.ViewPager\r\n            android:id=\"@+id/viewPager\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"180dp\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/timeAndCalorieLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"20dp\"\r\n        android:layout_marginLeft=\"16dp\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:layout_marginRight=\"16dp\"\r\n        android:layout_marginBottom=\"12dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/suggestionLinearLayout\">\r\n\r\n\r\n        <ImageView\r\n            android:id=\"@+id/calorieIcon\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:src=\"@drawable/ic_calorie_icon\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/calorieInfo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"2\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:text=\"Calorie...\"\r\n            android:textAlignment=\"center\"\r\n            android:textSize=\"12sp\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/prepTimeIcon\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:src=\"@drawable/ic_time_icon\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/prepTimeInfo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"2\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:text=\"Prep Time...\"\r\n            android:textAlignment=\"center\"\r\n            android:textSize=\"12sp\" />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginLeft=\"16dp\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:layout_marginRight=\"16dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/timeAndCalorieLayout\">\r\n\r\n        <androidx.appcompat.widget.AppCompatImageButton\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:src=\"@drawable/suggestion_tick_button\" />\r\n\r\n        <androidx.appcompat.widget.AppCompatImageButton\r\n            android:id=\"@+id/imageButton3\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:src=\"@drawable/suggestion_research_button\" />\r\n\r\n    </LinearLayout>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_suggestion.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_suggestion.xml	(date 1608928494086)
@@ -8,32 +8,32 @@
 
     <LinearLayout
         android:id="@+id/suggestionLinearLayout"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent">
+        android:orientation="vertical"
+        android:layout_width=                   "match_parent"
+        android:layout_height=                  "wrap_content"
+        app:layout_constraintTop_toTopOf=       "parent"
+        app:layout_constraintStart_toStartOf=   "parent"
+        app:layout_constraintEnd_toEndOf=       "parent" >
 
         <TextView
             android:id="@+id/text_suggestion"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginStart="16dp"
-            android:layout_marginEnd="16dp"
-            android:layout_marginBottom="12dp"
-            android:gravity="center_horizontal"
-            android:textAlignment="center"
-            android:textSize="20sp"
-            app:layout_constraintEnd_toEndOf="parent"
+            android:layout_width=               "match_parent"
+            android:layout_height=              "wrap_content"
+            android:layout_marginStart=         "16dp"
+            android:layout_marginBottom=        "12dp"
+            android:layout_marginEnd=           "16dp"
+            android:textAlignment=              "center"
+            android:textSize=                   "20sp"
+            app:layout_constraintEnd_toEndOf=   "parent"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent" />
+            app:layout_constraintTop_toTopOf=   "parent"
+            android:gravity=                    "center_horizontal" />
 
         <com.google.android.material.appbar.AppBarLayout
             android:id="@+id/appBarLayout"
             android:layout_width="match_parent"
             android:layout_height="wrap_content">
-
+            
             <com.google.android.material.tabs.TabLayout
                 android:id="@+id/tabLayout"
                 android:layout_width="match_parent"
@@ -54,12 +54,12 @@
         android:id="@+id/timeAndCalorieLayout"
         android:layout_width="match_parent"
         android:layout_height="20dp"
+        android:orientation="horizontal"
+        android:layout_marginTop="12dp"
+        android:layout_marginBottom="12dp"
         android:layout_marginLeft="16dp"
-        android:layout_marginTop="12dp"
         android:layout_marginRight="16dp"
-        android:layout_marginBottom="12dp"
-        android:orientation="horizontal"
-        app:layout_constraintTop_toBottomOf="@id/suggestionLinearLayout">
+        app:layout_constraintTop_toBottomOf="@id/suggestionLinearLayout" >
 
 
         <ImageView
@@ -74,10 +74,10 @@
             android:layout_width="wrap_content"
             android:layout_height="match_parent"
             android:layout_weight="2"
-            android:gravity="center_horizontal"
+            android:textSize="12sp"
+            android:textAlignment="center"
             android:text="Calorie..."
-            android:textAlignment="center"
-            android:textSize="12sp" />
+            android:gravity="center_horizontal" />
 
         <ImageView
             android:id="@+id/prepTimeIcon"
@@ -91,26 +91,26 @@
             android:layout_width="wrap_content"
             android:layout_height="match_parent"
             android:layout_weight="2"
-            android:gravity="center_horizontal"
-            android:text="Prep Time..."
+            android:textSize="12sp"
             android:textAlignment="center"
-            android:textSize="12sp" />
+            android:text="Prep Time..."
+            android:gravity="center_horizontal" />
     </LinearLayout>
 
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_marginLeft="16dp"
+        android:orientation="horizontal"
         android:layout_marginTop="16dp"
+        android:layout_marginLeft="16dp"
         android:layout_marginRight="16dp"
-        android:orientation="horizontal"
-        app:layout_constraintTop_toBottomOf="@id/timeAndCalorieLayout">
+        app:layout_constraintTop_toBottomOf="@id/timeAndCalorieLayout" >
 
         <androidx.appcompat.widget.AppCompatImageButton
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_weight="1"
-            android:src="@drawable/suggestion_tick_button" />
+            android:src="@drawable/suggestion_tick_button"/>
 
         <androidx.appcompat.widget.AppCompatImageButton
             android:id="@+id/imageButton3"
Index: app/src/main/java/com/example/kitchapp/ui/settings/UserSettings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp.ui.settings;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.kitchapp.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link UserSettings#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class UserSettings extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public UserSettings() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment UserSettings.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static UserSettings newInstance(String param1, String param2) {\r\n        UserSettings fragment = new UserSettings();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_user_settings, container, false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/settings/UserSettings.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/settings/UserSettings.java	(date 1608928494075)
@@ -1,12 +1,13 @@
 package com.example.kitchapp.ui.settings;
 
 import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
-import androidx.fragment.app.Fragment;
-
 import com.example.kitchapp.R;
 
 /**
Index: app/src/main/res/layout/ingredients_fragment_new.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.suggestion.tabs.IngredientsFragment\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/ingredientsText\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:gravity=\"center_horizontal\"\r\n        android:textAlignment=\"center\"\r\n        android:textSize=\"24dp\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/ingredients_fragment_new.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/ingredients_fragment_new.xml	(date 1608928494087)
@@ -9,8 +9,8 @@
         android:id="@+id/ingredientsText"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:gravity="center_horizontal"
+        android:textSize="24dp"
         android:textAlignment="center"
-        android:textSize="24dp" />
+        android:gravity="center_horizontal" />
 
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ShoppingList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//package com.example.kitchapp;\r\n//\r\n//import java.util.ArrayList;\r\n//\r\n///**\r\n// * Shopping list consists of ingredients that will be bought.\r\n// *\r\n// * @author Burak, Ali\r\n// * @version 10/12/2020\r\n// */\r\n//public class ShoppingList extends IngredientList {\r\n//\r\n//    //VARIABLES\r\n//    private ArrayList<Boolean> isInTheCart;\r\n//    private ArrayList<Integer> buyValue;\r\n//    private int numOfIngredients;\r\n//    private Fridge fridge;\r\n//\r\n//    //CONSTRUCTORS\r\n//\r\n//    //Fridge is not specified. It must be set to buy things.\r\n//    public ShoppingList(ArrayList<Ingredient> shoppingList) {\r\n//        super();\r\n//        list = shoppingList;\r\n//        numOfIngredients = shoppingList.size();\r\n//        for (int i = 0; i < numOfIngredients; i++) {\r\n//            isInTheCart.add(false);\r\n//            buyValue.add(0);\r\n//        }\r\n//    }\r\n//\r\n//    //Fridge is specified. Ingredients will be added to given Fridge.\r\n//    public ShoppingList(ArrayList<Ingredient> shoppingList, Fridge fridge) {\r\n//        super();\r\n//        numOfIngredients = shoppingList.size();\r\n//        this.fridge = fridge;\r\n//        for (int i = 0; i < numOfIngredients; i++) {\r\n//            isInTheCart.add(false);\r\n//            buyValue.add(0);\r\n//        }\r\n//    }\r\n//\r\n//    //GETTERS AND SETTERS\r\n//    public ArrayList<Boolean> getIsInTheCart() {\r\n//        return isInTheCart;\r\n//    }\r\n//\r\n//    public void setIsInTheCart(ArrayList<Boolean> isInTheCart) {\r\n//        this.isInTheCart = isInTheCart;\r\n//    }\r\n//\r\n//    public ArrayList<Integer> getBuyValue() {\r\n//        return buyValue;\r\n//    }\r\n//\r\n//    public void setBuyValue(ArrayList<Integer> buyValue) {\r\n//        this.buyValue = buyValue;\r\n//    }\r\n//\r\n//    public int getNumOfIngredients() {\r\n//        return numOfIngredients;\r\n//    }\r\n//\r\n//    public void setNumOfIngredients(int numOfIngredients) {\r\n//        this.numOfIngredients = numOfIngredients;\r\n//    }\r\n//\r\n//    public Fridge getFridge() {\r\n//        return fridge;\r\n//    }\r\n//\r\n//    public void setFridge(Fridge fridge) {\r\n//        this.fridge = fridge;\r\n//    }\r\n//\r\n//    //METHODS\r\n//\r\n//    /**\r\n//     * Adds checked ingredients to the fridge when user clicked to the buy button.\r\n//     */\r\n//    public void buy() {\r\n//        for (int i = 0; i < numOfIngredients; i++) {\r\n//            if (isInTheCart.get(i))\r\n//                fridge.add(list.get(i), buyValue.get(i));\r\n//        }\r\n//    }\r\n//\r\n//    /**\r\n//     * Sets how many of this ingredient will be added to cart.\r\n//     *\r\n//     * @param ingredient The ingredient whose +/- button pressed\r\n//     * @param number     Number of Ingredient that will be added to cart\r\n//     */\r\n//    public void setBuyValue(Ingredient ingredient, int number) {\r\n//        int index = list.indexOf(ingredient);\r\n//        buyValue.set(index, number);\r\n//    }\r\n//\r\n//    /**\r\n//     * @param name   Name of the new ingredient\r\n//     * @param number Number of new Ingredient that will be added to cart\r\n//     * @return newIngredient will be used for adding new item to database purposes.\r\n//     */\r\n//    public Ingredient addNew(String name, int number) {\r\n//        Ingredient newIngredient = new Ingredient();\r\n//        list.add(newIngredient);\r\n//        return newIngredient; //\r\n//    }\r\n//}\r\n//TODO: Şimdilik işe yaramıyor. Çözmek için hepsini seç + (CTRL + /) ya bas.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ShoppingList.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ShoppingList.java	(date 1608928494072)
@@ -1,110 +1,107 @@
-//package com.example.kitchapp;
-//
-//import java.util.ArrayList;
-//
-///**
-// * Shopping list consists of ingredients that will be bought.
-// *
-// * @author Burak, Ali
-// * @version 10/12/2020
-// */
-//public class ShoppingList extends IngredientList {
-//
-//    //VARIABLES
-//    private ArrayList<Boolean> isInTheCart;
-//    private ArrayList<Integer> buyValue;
-//    private int numOfIngredients;
-//    private Fridge fridge;
-//
-//    //CONSTRUCTORS
-//
-//    //Fridge is not specified. It must be set to buy things.
-//    public ShoppingList(ArrayList<Ingredient> shoppingList) {
-//        super();
-//        list = shoppingList;
-//        numOfIngredients = shoppingList.size();
-//        for (int i = 0; i < numOfIngredients; i++) {
-//            isInTheCart.add(false);
-//            buyValue.add(0);
-//        }
-//    }
-//
-//    //Fridge is specified. Ingredients will be added to given Fridge.
-//    public ShoppingList(ArrayList<Ingredient> shoppingList, Fridge fridge) {
-//        super();
-//        numOfIngredients = shoppingList.size();
-//        this.fridge = fridge;
-//        for (int i = 0; i < numOfIngredients; i++) {
-//            isInTheCart.add(false);
-//            buyValue.add(0);
-//        }
-//    }
-//
-//    //GETTERS AND SETTERS
-//    public ArrayList<Boolean> getIsInTheCart() {
-//        return isInTheCart;
-//    }
-//
-//    public void setIsInTheCart(ArrayList<Boolean> isInTheCart) {
-//        this.isInTheCart = isInTheCart;
-//    }
-//
-//    public ArrayList<Integer> getBuyValue() {
-//        return buyValue;
-//    }
-//
-//    public void setBuyValue(ArrayList<Integer> buyValue) {
-//        this.buyValue = buyValue;
-//    }
-//
-//    public int getNumOfIngredients() {
-//        return numOfIngredients;
-//    }
-//
-//    public void setNumOfIngredients(int numOfIngredients) {
-//        this.numOfIngredients = numOfIngredients;
-//    }
-//
-//    public Fridge getFridge() {
-//        return fridge;
-//    }
-//
-//    public void setFridge(Fridge fridge) {
-//        this.fridge = fridge;
-//    }
-//
-//    //METHODS
-//
-//    /**
-//     * Adds checked ingredients to the fridge when user clicked to the buy button.
-//     */
-//    public void buy() {
-//        for (int i = 0; i < numOfIngredients; i++) {
-//            if (isInTheCart.get(i))
-//                fridge.add(list.get(i), buyValue.get(i));
-//        }
-//    }
-//
-//    /**
-//     * Sets how many of this ingredient will be added to cart.
-//     *
-//     * @param ingredient The ingredient whose +/- button pressed
-//     * @param number     Number of Ingredient that will be added to cart
-//     */
-//    public void setBuyValue(Ingredient ingredient, int number) {
-//        int index = list.indexOf(ingredient);
-//        buyValue.set(index, number);
-//    }
-//
-//    /**
-//     * @param name   Name of the new ingredient
-//     * @param number Number of new Ingredient that will be added to cart
-//     * @return newIngredient will be used for adding new item to database purposes.
-//     */
-//    public Ingredient addNew(String name, int number) {
-//        Ingredient newIngredient = new Ingredient();
-//        list.add(newIngredient);
-//        return newIngredient; //
-//    }
-//}
-//TODO: Şimdilik işe yaramıyor. Çözmek için hepsini seç + (CTRL + /) ya bas.
+package com.example.kitchapp;
+
+import java.util.ArrayList;
+
+/**
+ * Shopping list consists of ingredients that will be bought.
+ * @author Burak, Ali
+ * @version 10/12/2020
+ */
+public class ShoppingList extends IngredientList{
+
+    //VARIABLES
+    private ArrayList<Boolean> isInTheCart;
+    private ArrayList<Integer> buyValue;
+    private int numOfIngredients;
+    private Fridge fridge;
+
+    //CONSTRUCTORS
+
+    //Fridge is not specified. It must be set to buy things.
+    public ShoppingList( ArrayList<Ingredient> shoppingList ) {
+        super();
+        list = shoppingList;
+        numOfIngredients = shoppingList.size();
+        for( int i = 0 ; i < numOfIngredients ; i++ ){
+            isInTheCart.add( false );
+            buyValue.add( 0 );
+        }
+    }
+    
+    //Fridge is specified. Ingredients will be added to given Fridge.
+    public ShoppingList(ArrayList<Ingredient> shoppingList, Fridge fridge ) {
+        super();
+        numOfIngredients = shoppingList.size();
+        this.fridge = fridge;
+        for( int i = 0 ; i < numOfIngredients ; i++ ){
+            isInTheCart.add( false );
+            buyValue.add( 0 );
+        }
+    }
+
+    //GETTERS AND SETTERS
+    public ArrayList<Boolean> getIsInTheCart() {
+        return isInTheCart;
+    }
+
+    public void setIsInTheCart(ArrayList<Boolean> isInTheCart) {
+        this.isInTheCart = isInTheCart;
+    }
+
+    public ArrayList<Integer> getBuyValue() {
+        return buyValue;
+    }
+
+    public void setBuyValue(ArrayList<Integer> buyValue) {
+        this.buyValue = buyValue;
+    }
+
+    public int getNumOfIngredients() {
+        return numOfIngredients;
+    }
+
+    public void setNumOfIngredients(int numOfIngredients) {
+        this.numOfIngredients = numOfIngredients;
+    }
+
+    public Fridge getFridge() {
+        return fridge;
+    }
+
+    public void setFridge(Fridge fridge) {
+        this.fridge = fridge;
+    }
+
+    //METHODS
+    /**
+     * Adds checked ingredients to the fridge when user clicked to the buy button.
+     */
+    public void buy(){
+        for ( int i = 0 ; i < numOfIngredients ; i++ ){
+            if( isInTheCart.get(i) )
+                fridge.add( list.get(i) , buyValue.get(i) );
+        }
+    }
+
+    /**
+     * Sets how many of this ingredient will be added to cart.
+     * @param ingredient    The ingredient whose +/- button pressed
+     * @param number        Number of Ingredient that will be added to cart
+     */
+    public void setBuyValue( Ingredient ingredient, int number ){
+        int index = list.indexOf( ingredient );
+        buyValue.set( index , number );
+    }
+
+    /**
+     *
+     * @param name      Name of the new ingredient
+     * @param number    Number of new Ingredient that will be added to cart
+     * @return newIngredient will be used for adding new item to database purposes.
+     */
+    public Ingredient addNew( String name, int number ){
+        Ingredient newIngredient = new Ingredient();
+        list.add( newIngredient );
+        return newIngredient; //
+    }
+}
Index: app/src/main/res/layout/fragment_fridge_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/singleFridgeItemLayout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"40dp\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/fridgeItemName\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:layout_marginRight=\"8dp\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"24sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/fridgeDeleteButton\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/fridgeItemNumber\"\r\n        android:layout_width=\"50dp\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:layout_marginRight=\"8dp\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/minusButton\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/fridgeDeleteButton\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:layout_marginRight=\"8dp\"\r\n        android:gravity=\"center\"\r\n        android:src=\"@drawable/ic_baseline_delete_forever_24\"\r\n        app:backgroundTint=\"#E91E1E\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/plusButton\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/plusButton\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:layout_marginRight=\"8dp\"\r\n        android:src=\"@drawable/ic_baseline_exposure_plus_1_24\"\r\n        app:backgroundTint=\"#4CAF50\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/fridgeItemNumber\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/minusButton\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:src=\"@drawable/ic_baseline_exposure_neg_1_24\"\r\n        app:backgroundTint=\"#FF5722\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_fridge_item.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_fridge_item.xml	(date 1608928494079)
@@ -1,12 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/singleFridgeItemLayout"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/single_fridge_item_layout"
     android:layout_width="match_parent"
     android:layout_height="40dp">
 
     <TextView
-        android:id="@+id/fridgeItemName"
+        android:id="@+id/fridge_item_name"
         android:layout_width="0dp"
         android:layout_height="0dp"
         android:layout_marginEnd="8dp"
@@ -19,7 +20,7 @@
         app:layout_constraintTop_toTopOf="parent" />
 
     <TextView
-        android:id="@+id/fridgeItemNumber"
+        android:id="@+id/fridge_item_number"
         android:layout_width="50dp"
         android:layout_height="match_parent"
         android:layout_marginEnd="8dp"
@@ -53,15 +54,15 @@
         android:src="@drawable/ic_baseline_exposure_plus_1_24"
         app:backgroundTint="#4CAF50"
         app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toStartOf="@+id/fridgeItemNumber"
+        app:layout_constraintEnd_toStartOf="@+id/fridge_item_number"
         app:layout_constraintTop_toTopOf="parent" />
 
     <ImageButton
         android:id="@+id/minusButton"
         android:layout_width="40dp"
         android:layout_height="0dp"
-        android:src="@drawable/ic_baseline_exposure_neg_1_24"
         app:backgroundTint="#FF5722"
+        android:src="@drawable/ic_baseline_exposure_neg_1_24"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
Index: app/src/main/java/com/example/kitchapp/ui/userselection/UserSelection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp.ui.userselection;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.kitchapp.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link UserSelection#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class UserSelection extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public UserSelection() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment UserSelection.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static UserSelection newInstance(String param1, String param2) {\r\n        UserSelection fragment = new UserSelection();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_user_selection, container, false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/userselection/UserSelection.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/userselection/UserSelection.java	(date 1608928494077)
@@ -1,12 +1,13 @@
 package com.example.kitchapp.ui.userselection;
 
 import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
-import androidx.fragment.app.Fragment;
-
 import com.example.kitchapp.R;
 
 /**
Index: app/src/main/res/layout/activity_main2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main2.xml	(date 1608928494078)
+++ app/src/main/res/layout/activity_main2.xml	(date 1608928494078)
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".MainActivity2">
+
+    <Button
+        android:id="@+id/OK"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginEnd="171dp"
+        android:layout_marginBottom="270dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="@+id/fragment_container"
+        tools:text="OK" />
+
+    <EditText
+        android:id="@+id/editTextNumber"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginStart="100dp"
+        android:layout_marginTop="130dp"
+        android:ems="10"
+        android:inputType="number"
+        android:text="Number"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.497"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.396" />
+
+    <EditText
+        android:id="@+id/editTextTextPersonName2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginBottom="417dp"
+        android:ems="10"
+        android:inputType="textPersonName"
+        android:text="Ingredient Name"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.432"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.24" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/navigation/app_navigation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/navigation/app_navigation.xml	(date 1608928494092)
+++ app/src/main/res/navigation/app_navigation.xml	(date 1608928494092)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/app_navigation"
+    app:startDestination="@id/fridgeFragment">
+
+    <fragment
+        android:id="@+id/fridgeFragment"
+        android:name="com.example.kitchapp.ui.fridge.FridgeFragment"
+        android:label="fragment_fridge"
+        tools:layout="@layout/fragment_fridge_new" />
+    <fragment
+        android:id="@+id/shoppingListScreenFragment"
+        android:name="com.example.kitchapp.ui.shoppinglist.ShoppingListScreenFragment"
+        android:label="fragment_shoppinglist_list"
+        tools:layout="@layout/fragment_shoppinglist_list" />
+    <fragment
+        android:id="@+id/suggestionScreen"
+        android:name="com.example.kitchapp.ui.suggestion.tabs.SuggestionScreen"
+        android:label="fragment_suggestion_screen"
+        tools:layout="@layout/fragment_suggestion_screen" />
+    <fragment
+        android:id="@+id/recipesFragment"
+        android:name="com.example.kitchapp.ui.recipes.RecipesFragment"
+        android:label="fragment_recipes"
+        tools:layout="@layout/fragment_recipes" />
+    <fragment
+        android:id="@+id/settingsFragment"
+        android:name="com.example.kitchapp.ui.settings.SettingsFragment"
+        android:label="fragment_settings"
+        tools:layout="@layout/fragment_settings" />
+</navigation>
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/Recipe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport androidx.room.ColumnInfo;\r\nimport androidx.room.Entity;\r\nimport androidx.room.PrimaryKey;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * Recipe of a meal\r\n *\r\n * @author Burak, Ali, Tarik,Şule\r\n * @version 10/12/2020\r\n */\r\n@Entity\r\npublic class Recipe {\r\n\r\n    @PrimaryKey(autoGenerate = true)\r\n    private int recipeID;\r\n    @ColumnInfo(name = \"name\")\r\n    private String name;\r\n    @ColumnInfo(name = \"recipeName\")\r\n    private String recipe;\r\n    @ColumnInfo(name = \"recipeInfo\")\r\n    private double calorie;\r\n    @ColumnInfo(name = \"prepTime\")\r\n    private int prepTime;\r\n    @ColumnInfo(name = \"recipePhotoId\")\r\n    private int recipePhotoId;\r\n\r\n    public int getRecipeID() {\r\n        return recipeID;\r\n    }\r\n\r\n    public void setRecipeID(int recipeID) {\r\n        this.recipeID = recipeID;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getRecipe() {\r\n        return recipe;\r\n    }\r\n\r\n    public void setRecipe(String recipe) {\r\n        this.recipe = recipe;\r\n    }\r\n\r\n    public double getCalorie() {\r\n        return calorie;\r\n    }\r\n\r\n    public void setCalorie(double calorie) {\r\n        this.calorie = calorie;\r\n    }\r\n\r\n    public int getPrepTime() {\r\n        return prepTime;\r\n    }\r\n\r\n    public void setPrepTime(int prepTime) {\r\n        this.prepTime = prepTime;\r\n    }\r\n\r\n    public int getRecipePhotoId() {\r\n        return recipePhotoId;\r\n    }\r\n\r\n    public void setRecipePhotoId(int recipePhotoId) {\r\n        this.recipePhotoId = recipePhotoId;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/Recipe.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/Recipe.java	(date 1608928494070)
@@ -1,41 +1,57 @@
 package com.example.kitchapp;
-
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
-
 import java.util.ArrayList;
 
 /**
  * Recipe of a meal
- *
  * @author Burak, Ali, Tarik,Şule
  * @version 10/12/2020
  */
-@Entity
 public class Recipe {
 
+    //VARIABLES
     @PrimaryKey(autoGenerate = true)
-    private int recipeID;
+    private int id;
     @ColumnInfo(name = "name")
     private String name;
-    @ColumnInfo(name = "recipeName")
+    @ColumnInfo(name= "recipe")
     private String recipe;
-    @ColumnInfo(name = "recipeInfo")
+    @ColumnInfo(name= "lisOfIngredients")
+    private ArrayList<Ingredient> ingredients;
+    @ColumnInfo(name= "recipe")
     private double calorie;
-    @ColumnInfo(name = "prepTime")
+    @ColumnInfo(name= "prepTime")
     private int prepTime;
-    @ColumnInfo(name = "recipePhotoId")
+    @ColumnInfo(name= "recipePhotoId")
     private int recipePhotoId;
 
-    public int getRecipeID() {
-        return recipeID;
+    //DEFAULT CONSTRUCTOR
+   /** public Recipe(String name,
+                  String recipe,
+                  ArrayList<Ingredient> ingredients,
+                  double calorie,
+                  int prepTime,
+                  boolean isVegetarian) {
+        this.name = name;
+        this.recipe = recipe;
+        this.ingredients = ingredients;
+        this.calorie = calorie;
+        this.prepTime = prepTime;
+        this.isVegetarian = isVegetarian;
+        myRef.child(name).setValue(this);
     }
 
-    public void setRecipeID(int recipeID) {
-        this.recipeID = recipeID;
-    }
+    public Recipe(String name, String recipe, int recipePhotoId)
+    {
+        this.name = name;
+        this.recipe = recipe;
+        this.recipePhotoId= recipePhotoId;
+        myRef.child(name).setValue(this);
+    }**/
 
+    //GETTERS AND SETTERS
     public String getName() {
         return name;
     }
@@ -43,15 +59,22 @@
     public void setName(String name) {
         this.name = name;
     }
-
-    public String getRecipe() {
-        return recipe;
-    }
+        public String getRecipe() {
+            return recipe;
+        }
 
-    public void setRecipe(String recipe) {
-        this.recipe = recipe;
-    }
+        public void setRecipe(String recipe) {
+            this.recipe = recipe;
+        }
 
+    public ArrayList<Ingredient> getIngredients() {
+        return ingredients;
+    }
+
+    public void setIngredients(ArrayList<Ingredient> ingredients) {
+        this.ingredients = ingredients;
+    }
+
     public double getCalorie() {
         return calorie;
     }
@@ -68,11 +91,12 @@
         this.prepTime = prepTime;
     }
 
-    public int getRecipePhotoId() {
-        return recipePhotoId;
-    }
+    public int getRecipePhotoId(){
+        return recipePhotoId;}
 
-    public void setRecipePhotoId(int recipePhotoId) {
-        this.recipePhotoId = recipePhotoId;
-    }
+    public void setRecipePhotoId( int recipePhotoId){
+        this.recipePhotoId =  recipePhotoId;}
+
+
+    //TODO: connection to the database will be established
 }
Index: app/src/main/res/layout/fragment_shoppinglist_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_shoppinglist_list.xml	(date 1608928494084)
+++ app/src/main/res/layout/fragment_shoppinglist_list.xml	(date 1608928494084)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.recyclerview.widget.RecyclerView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/list"
+    android:name="com.example.kitchapp.ShoppingListScreenFragment"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_marginLeft="16dp"
+    android:layout_marginRight="16dp"
+    app:layoutManager="LinearLayoutManager"
+    tools:context=".ui.shoppinglist.ShoppingListScreenFragment"
+    tools:listitem="@layout/fragment_shoppinglist" />
\ No newline at end of file
Index: app/src/main/res/layout/fragment_shoppinglist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_shoppinglist.xml	(date 1608928494084)
+++ app/src/main/res/layout/fragment_shoppinglist.xml	(date 1608928494084)
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android ="http://schemas.android.com/apk/res/android"
+    xmlns:app ="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ui.shoppingList.FridgeFragment">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:padding="20dp"
+        tools:context=".ui.fridge.fridgeUI">
+
+        <TextView
+            android:id="@+id/textView"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="100dp"
+            android:shadowColor="#FA0303"
+            android:shadowDx="-6"
+            android:shadowDy="-6"
+            android:shadowRadius="7"
+            android:text="SHOPPING LIST"
+            android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+            android:textSize="16pt"
+            android:textStyle="bold"
+            android:visibility="visible"
+            app:layout_constraintBottom_toTopOf="@+id/quantity1"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.363"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <ImageButton
+            android:id="@+id/help_screen"
+            android:layout_width="31dp"
+            android:layout_height="36dp"
+            android:layout_marginBottom="110dp"
+            android:background="@android:color/background_light"
+            android:src="@drawable/ic_help_screen"
+            android:text="Text"
+            app:layout_constraintBottom_toTopOf="@+id/checkBox1"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.242" />
+
+        <ImageButton
+            android:id="@+id/shoppingListFragment"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="20dp"
+            android:layout_marginBottom="27dp"
+            android:background="@android:color/background_light"
+            android:src="@drawable/ic_shoppinglist"
+            app:layout_constraintBottom_toTopOf="@+id/checkBox1"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.498"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/help_screen" />
+
+        <CheckBox
+            android:id="@+id/checkBox1"
+            android:layout_width="250dp"
+            android:layout_height="33dp"
+            android:layout_marginStart="45dp"
+            android:layout_marginTop="100dp"
+            android:layout_marginEnd="240dp"
+            android:layout_marginBottom="16dp"
+            android:text="CheckBox"
+            app:layout_constraintBottom_toTopOf="@+id/checkBox2"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.182"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/textView"
+            app:layout_constraintVertical_bias="0.625" />
+
+
+
+        <ImageButton
+            android:id="@+id/quantity1"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="56dp"
+            android:layout_marginTop="150dp"
+            android:layout_marginEnd="100dp"
+            android:background="@android:color/background_light"
+            android:src="@drawable/ic_quantity"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toEndOf="@+id/checkBox1"
+            app:layout_constraintTop_toTopOf="parent" />
+
+
+
+        <Button
+            android:id="@+id/button"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="15dp"
+            android:layout_marginBottom="21dp"
+            android:background="@android:color/holo_green_light"
+            android:textColor="@android:color/holo_red_dark"
+            android:text="BUY"
+            app:layout_constraintBottom_toBottomOf=""
+            app:layout_constraintEnd_toEndOf=""
+            app:layout_constraintStart_toStartOf=""
+            app:layout_constraintTop_toBottomOf="" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</ScrollView>
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/Fridge.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//package com.example.kitchapp;\r\n//\r\n//import com.google.firebase.database.DatabaseReference;\r\n//import com.google.firebase.database.FirebaseDatabase;\r\n//\r\n//import java.util.ArrayList;\r\n//import java.util.Collections;\r\n//\r\n///**\r\n// * Fridge\r\n// *\r\n// * @author Burak, Emre, Gülçin\r\n// * @version 12/12/2020\r\n// */\r\n//public class Fridge extends IngredientList {\r\n//    FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n//    DatabaseReference myRef = database.getReference().child(\"Fridge\");\r\n//\r\n//    //constructor\r\n//    public Fridge(ArrayList<Ingredient> list) {\r\n//        super();\r\n//        this.list = list;\r\n//        myRef.setValue(list);\r\n//    }\r\n//\r\n//    public Fridge() {\r\n//        super();\r\n//        myRef.setValue(list);\r\n//    }\r\n//\r\n//    /**\r\n//     * adds just one to ingredient number\r\n//     *\r\n//     * @param ingredient\r\n//     */\r\n//    public void addByOne(Ingredient ingredient) {\r\n//        add(ingredient, 1);\r\n//    }\r\n//\r\n//    /**\r\n//     * eats just one from the amount of ingredient\r\n//     *\r\n//     * @param ingredient\r\n//     */\r\n//    public void eatByOne(Ingredient ingredient) { //same as above\r\n//        eat(ingredient, 1);\r\n//    }\r\n//\r\n//    /**\r\n//     * -Burak ~ We can change return type to an IngredientList ???\r\n//     * // tried to do the return type Ingredientlist but as it is abstract there were errors (deleted) -Emre\r\n//     *\r\n//     * @param user The user who requested a suggestion.\r\n//     * @return A specific ArrayList of Ingredient that will be used by suggestion.\r\n//     */\r\n//    public ArrayList<Ingredient> ingredientsSpecificToUser(User user) {\r\n//\r\n//        ArrayList<Ingredient> allergiesList = user.getAllergiesList();\r\n//        ArrayList<Ingredient> specificIngredients = (ArrayList<Ingredient>) list.clone();\r\n//\r\n//        for (int i = 0; i < allergiesList.size(); i++) {\r\n//            if (findByName(allergiesList.get(i).getName()) != null)\r\n//                specificIngredients.remove(findByName(allergiesList.get(i).getName()));\r\n//        }\r\n//\r\n//        return specificIngredients;\r\n//\r\n//    }\r\n//\r\n//    /**\r\n//     * -Burak ~ We can make a new RecipeList class ???\r\n//     *\r\n//     * @param user The user who requested a suggestion.\r\n//     * @return A specific ArrayList of Recipe that will be used by suggestion.\r\n//     */\r\n//    public ArrayList<Recipe> recipesSpecificToUser(User user) {\r\n//        //TODO: We need to get the full recipe list from database...\r\n//\r\n//        ArrayList<Recipe> recipes; //Assume that we got the full recipe list.\r\n//        recipes = new ArrayList<Recipe>();\r\n//        ArrayList<Recipe> undesired = user.getUndesiredMeals();\r\n//\r\n//        for (int i = 0; i < undesired.size(); i++) {\r\n//            recipes.remove(undesired.get(i));\r\n//        }\r\n//        return recipes;\r\n//    }\r\n//\r\n//    /**\r\n//     * -Burak, Emre ~ Please read FIXME and TODO entries.\r\n//     *\r\n//     * @param user The user who requested a suggestion.\r\n//     * @return A specific ArrayList of Recipe that will be used by suggestion.\r\n//     */\r\n//    public ArrayList<Recipe> suggest(User user) {\r\n//        //FIXME: This method is not completed and not true. I implemented to show an algorithm.\r\n//        //TODO: We should return a randomized Recipe ArrayList and suggest sequentially in case\r\n//        // user rejects meal.\r\n//        // I think we should find another way to store number of Ingredient because it gives trouble\r\n//        // when comparing fridge ingredients and recipe ingredients. Or it's fine if you can find\r\n//        // another way to solve this :) -Burak\r\n//        // maybe fixed :) -Emre\r\n//\r\n//        ArrayList<Ingredient> usableIngredients;\r\n//        ArrayList<Recipe> usableRecipes;\r\n//\r\n//        usableIngredients = ingredientsSpecificToUser(user);\r\n//        usableRecipes = recipesSpecificToUser(user);\r\n//\r\n//        for (int i = 0; i < usableRecipes.size(); i++) {\r\n//            if (!fridgeContains(usableRecipes.get(i), usableIngredients))\r\n//                usableRecipes.remove(i);\r\n//        }\r\n//\r\n//        Collections.shuffle(usableRecipes);\r\n//\r\n//        return usableRecipes;\r\n//    }\r\n//\r\n//    private boolean fridgeContains(Recipe recipe, ArrayList<Ingredient> usableIngredients) {\r\n//\r\n//        for (int i = 0; i < recipe.getIngredients().size(); i++) {\r\n//\r\n//            if (this.findByName(recipe.getIngredients().get(i).getName()) != null) {\r\n//                if (this.findByName(recipe.getIngredients().get(i).getName()).getNumber()\r\n//                        < recipe.getIngredients().get(i).getNumber())\r\n//                    return false;\r\n//            } else\r\n//                return false;\r\n//\r\n//        }\r\n//        return true;\r\n//    }\r\n//\r\n//    /**\r\n//     * -Burak, Emre ~ TODO: We need another method that connects suggest and eat functions. //maybe it is fixed (?)\r\n//     * When user accepts a recipe, the ingredients will be remove from fridge.\r\n//     */\r\n//    public void eatMeal(Recipe meal) {\r\n//        ArrayList<Ingredient> recipeIngredients;\r\n//        recipeIngredients = meal.getIngredients();\r\n//\r\n//        for (int i = 0; i < recipeIngredients.size(); i++)\r\n//            eat(recipeIngredients.get(i), recipeIngredients.get(i).getNumber());\r\n//    }\r\n//\r\n//}\r\n//TODO: Şimdilik işe yaramıyor.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/Fridge.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/Fridge.java	(date 1608928494066)
@@ -1,148 +1,137 @@
-//package com.example.kitchapp;
-//
-//import com.google.firebase.database.DatabaseReference;
-//import com.google.firebase.database.FirebaseDatabase;
-//
-//import java.util.ArrayList;
-//import java.util.Collections;
-//
-///**
-// * Fridge
-// *
-// * @author Burak, Emre, Gülçin
-// * @version 12/12/2020
-// */
-//public class Fridge extends IngredientList {
-//    FirebaseDatabase database = FirebaseDatabase.getInstance();
-//    DatabaseReference myRef = database.getReference().child("Fridge");
-//
-//    //constructor
-//    public Fridge(ArrayList<Ingredient> list) {
-//        super();
-//        this.list = list;
-//        myRef.setValue(list);
-//    }
-//
-//    public Fridge() {
-//        super();
-//        myRef.setValue(list);
-//    }
-//
-//    /**
-//     * adds just one to ingredient number
-//     *
-//     * @param ingredient
-//     */
-//    public void addByOne(Ingredient ingredient) {
-//        add(ingredient, 1);
-//    }
-//
-//    /**
-//     * eats just one from the amount of ingredient
-//     *
-//     * @param ingredient
-//     */
-//    public void eatByOne(Ingredient ingredient) { //same as above
-//        eat(ingredient, 1);
-//    }
-//
-//    /**
-//     * -Burak ~ We can change return type to an IngredientList ???
-//     * // tried to do the return type Ingredientlist but as it is abstract there were errors (deleted) -Emre
-//     *
-//     * @param user The user who requested a suggestion.
-//     * @return A specific ArrayList of Ingredient that will be used by suggestion.
-//     */
-//    public ArrayList<Ingredient> ingredientsSpecificToUser(User user) {
-//
-//        ArrayList<Ingredient> allergiesList = user.getAllergiesList();
-//        ArrayList<Ingredient> specificIngredients = (ArrayList<Ingredient>) list.clone();
-//
-//        for (int i = 0; i < allergiesList.size(); i++) {
-//            if (findByName(allergiesList.get(i).getName()) != null)
-//                specificIngredients.remove(findByName(allergiesList.get(i).getName()));
-//        }
-//
-//        return specificIngredients;
-//
-//    }
-//
-//    /**
-//     * -Burak ~ We can make a new RecipeList class ???
-//     *
-//     * @param user The user who requested a suggestion.
-//     * @return A specific ArrayList of Recipe that will be used by suggestion.
-//     */
-//    public ArrayList<Recipe> recipesSpecificToUser(User user) {
-//        //TODO: We need to get the full recipe list from database...
-//
-//        ArrayList<Recipe> recipes; //Assume that we got the full recipe list.
-//        recipes = new ArrayList<Recipe>();
-//        ArrayList<Recipe> undesired = user.getUndesiredMeals();
-//
-//        for (int i = 0; i < undesired.size(); i++) {
-//            recipes.remove(undesired.get(i));
-//        }
-//        return recipes;
-//    }
-//
-//    /**
-//     * -Burak, Emre ~ Please read FIXME and TODO entries.
-//     *
-//     * @param user The user who requested a suggestion.
-//     * @return A specific ArrayList of Recipe that will be used by suggestion.
-//     */
-//    public ArrayList<Recipe> suggest(User user) {
-//        //FIXME: This method is not completed and not true. I implemented to show an algorithm.
-//        //TODO: We should return a randomized Recipe ArrayList and suggest sequentially in case
-//        // user rejects meal.
-//        // I think we should find another way to store number of Ingredient because it gives trouble
-//        // when comparing fridge ingredients and recipe ingredients. Or it's fine if you can find
-//        // another way to solve this :) -Burak
-//        // maybe fixed :) -Emre
-//
-//        ArrayList<Ingredient> usableIngredients;
-//        ArrayList<Recipe> usableRecipes;
-//
-//        usableIngredients = ingredientsSpecificToUser(user);
-//        usableRecipes = recipesSpecificToUser(user);
-//
-//        for (int i = 0; i < usableRecipes.size(); i++) {
-//            if (!fridgeContains(usableRecipes.get(i), usableIngredients))
-//                usableRecipes.remove(i);
-//        }
-//
-//        Collections.shuffle(usableRecipes);
-//
-//        return usableRecipes;
-//    }
-//
-//    private boolean fridgeContains(Recipe recipe, ArrayList<Ingredient> usableIngredients) {
-//
-//        for (int i = 0; i < recipe.getIngredients().size(); i++) {
-//
-//            if (this.findByName(recipe.getIngredients().get(i).getName()) != null) {
-//                if (this.findByName(recipe.getIngredients().get(i).getName()).getNumber()
-//                        < recipe.getIngredients().get(i).getNumber())
-//                    return false;
-//            } else
-//                return false;
-//
-//        }
-//        return true;
-//    }
-//
-//    /**
-//     * -Burak, Emre ~ TODO: We need another method that connects suggest and eat functions. //maybe it is fixed (?)
-//     * When user accepts a recipe, the ingredients will be remove from fridge.
-//     */
-//    public void eatMeal(Recipe meal) {
-//        ArrayList<Ingredient> recipeIngredients;
-//        recipeIngredients = meal.getIngredients();
-//
-//        for (int i = 0; i < recipeIngredients.size(); i++)
-//            eat(recipeIngredients.get(i), recipeIngredients.get(i).getNumber());
-//    }
-//
-//}
-//TODO: Şimdilik işe yaramıyor.
\ No newline at end of file
+package com.example.kitchapp;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+
+import java.util.*;
+
+/**
+ * Fridge
+ * @author Burak, Emre, Gülçin
+ * @version 12/12/2020
+ */
+public class Fridge extends IngredientList {
+    FirebaseDatabase database = FirebaseDatabase.getInstance();
+    DatabaseReference myRef = database.getReference().child("Fridge");
+    //constructor
+    public Fridge( ArrayList<Ingredient> list ){
+        super();
+        this.list = list;
+        myRef.setValue(list);
+    }
+    public Fridge(){
+        super();
+        myRef.setValue(list);
+    }
+
+    /**
+     * adds just one to ingredient number
+     * @param ingredient
+     */
+    public void addByOne(Ingredient ingredient){
+        add( ingredient,1);
+    }
+    /**
+     * eats just one from the amount of ingredient
+     * @param ingredient
+     */
+    public void eatByOne(Ingredient ingredient){ //same as above
+        eat( ingredient, 1);
+    }
+
+    /**
+     * -Burak ~ We can change return type to an IngredientList ???
+     * // tried to do the return type Ingredientlist but as it is abstract there were errors (deleted) -Emre
+     * @param user The user who requested a suggestion.
+     * @return  A specific ArrayList of Ingredient that will be used by suggestion.
+     */
+    public ArrayList<Ingredient> ingredientsSpecificToUser(User user){
+
+        ArrayList<Ingredient> allergiesList = user.getAllergiesList();
+        ArrayList<Ingredient> specificIngredients = (ArrayList<Ingredient>) list.clone();
+
+        for ( int i = 0 ; i < allergiesList.size() ; i++ ){
+            if( findByName( allergiesList.get(i).getName() ) != null )
+                specificIngredients.remove( findByName( allergiesList.get(i).getName() ) );
+        }
+
+        return specificIngredients;
+
+    }
+
+    /**
+     * -Burak ~ We can make a new RecipeList class ???
+     * @param user The user who requested a suggestion.
+     * @return  A specific ArrayList of Recipe that will be used by suggestion.
+     */
+    public ArrayList<Recipe> recipesSpecificToUser(User user){
+        //TODO: We need to get the full recipe list from database...
+
+        ArrayList<Recipe> recipes; //Assume that we got the full recipe list.
+        recipes = new ArrayList<Recipe>();
+        ArrayList<Recipe> undesired = user.getUndesiredMeals();
+
+        for( int i = 0; i < undesired.size() ; i++ ){
+            recipes.remove( undesired.get(i) );
+        }
+        return recipes;
+    }
+
+    /**
+     * -Burak, Emre ~ Please read FIXME and TODO entries.
+     * @param user The user who requested a suggestion.
+     * @return  A specific ArrayList of Recipe that will be used by suggestion.
+     */
+    public ArrayList<Recipe> suggest(User user){
+        //FIXME: This method is not completed and not true. I implemented to show an algorithm.
+        //TODO: We should return a randomized Recipe ArrayList and suggest sequentially in case
+        // user rejects meal.
+        // I think we should find another way to store number of Ingredient because it gives trouble
+        // when comparing fridge ingredients and recipe ingredients. Or it's fine if you can find
+        // another way to solve this :) -Burak
+        // maybe fixed :) -Emre
+
+        ArrayList<Ingredient> usableIngredients;
+        ArrayList<Recipe> usableRecipes;
+
+        usableIngredients   =   ingredientsSpecificToUser(user);
+        usableRecipes       =   recipesSpecificToUser(user);
+
+        for (int i = 0; i < usableRecipes.size() ; i++) {
+            if( !fridgeContains(usableRecipes.get(i), usableIngredients) )
+                usableRecipes.remove(i);
+        }
+
+        Collections.shuffle( usableRecipes );
+
+        return usableRecipes;
+    }
+
+    private boolean fridgeContains( Recipe recipe, ArrayList<Ingredient> usableIngredients) {
+
+        for (int i = 0; i < recipe.getIngredients().size() ; i++) {
+
+            if( this.findByName( recipe.getIngredients().get(i).getName() ) != null ){
+                if( this.findByName( recipe.getIngredients().get(i).getName() ).getNumber()
+                        < recipe.getIngredients().get(i).getNumber() )
+                    return false;
+            }
+            else
+                return false;
+
+        }
+        return true;
+    }
+
+    /**
+     * -Burak, Emre ~ TODO: We need another method that connects suggest and eat functions. //maybe it is fixed (?)
+     * When user accepts a recipe, the ingredients will be remove from fridge.
+     */
+    public void eatMeal( Recipe meal ){
+        ArrayList<Ingredient> recipeIngredients;
+        recipeIngredients = meal.getIngredients();
+
+        for( int i = 0 ; i < recipeIngredients.size() ; i++ )
+            eat( recipeIngredients.get(i) , recipeIngredients.get(i).getNumber() );
+    }
+
+}
Index: app/src/main/res/layout/content_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_main.xml	(date 1608928494079)
+++ app/src/main/res/layout/content_main.xml	(date 1608928494079)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"></androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/recipe_fragment_new.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/recipe_fragment_new.xml	(date 1608928494088)
+++ app/src/main/res/layout/recipe_fragment_new.xml	(date 1608928494088)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ui.suggestion.tabs.RecipeFragment">
+
+    <TextView
+        android:id="@+id/recipeText"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:textSize="24dp"
+        android:textAlignment="center"
+        android:layout_gravity="center" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/MyShoppingListRecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/MyShoppingListRecyclerViewAdapter.java	(date 1608928494070)
+++ app/src/main/java/com/example/kitchapp/MyShoppingListRecyclerViewAdapter.java	(date 1608928494070)
@@ -0,0 +1,63 @@
+package com.example.kitchapp;
+
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.example.kitchapp.dummy.DummyContent.DummyItem;
+
+import java.util.List;
+
+/**
+ * {@link RecyclerView.Adapter} that can display a {@link DummyItem}.
+ * TODO: Replace the implementation with code for your data type.
+ */
+public class MyShoppingListRecyclerViewAdapter extends RecyclerView.Adapter<MyShoppingListRecyclerViewAdapter.ViewHolder> {
+
+    private final List<DummyItem> mValues;
+
+    public MyShoppingListRecyclerViewAdapter(List<DummyItem> items) {
+        mValues = items;
+    }
+
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        View view = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.fragment_shopping_item, parent, false);
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void onBindViewHolder(final ViewHolder holder, int position) {
+        holder.mItem = mValues.get(position);
+        holder.mIdView.setText(mValues.get(position).id);
+        holder.mContentView.setText(mValues.get(position).content);
+    }
+
+    @Override
+    public int getItemCount() {
+        return mValues.size();
+    }
+
+    public class ViewHolder extends RecyclerView.ViewHolder {
+        public final View mView;
+        public final TextView mIdView;
+        public final TextView mContentView;
+        public DummyItem mItem;
+
+        public ViewHolder(View view) {
+            super(view);
+            mView = view;
+            mIdView = (TextView) view.findViewById(R.id.item_number);
+            mContentView = (TextView) view.findViewById(R.id.content);
+        }
+
+        @Override
+        public String toString() {
+            return super.toString() + " '" + mContentView.getText() + "'";
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ShoppingListFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ShoppingListFragment.java	(date 1608928494072)
+++ app/src/main/java/com/example/kitchapp/ShoppingListFragment.java	(date 1608928494072)
@@ -0,0 +1,71 @@
+package com.example.kitchapp;
+
+import android.content.Context;
+import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.example.kitchapp.dummy.DummyContent;
+
+/**
+ * A fragment representing a list of Items.
+ */
+public class ShoppingListFragment extends Fragment {
+
+    // TODO: Customize parameter argument names
+    private static final String ARG_COLUMN_COUNT = "column-count";
+    // TODO: Customize parameters
+    private int mColumnCount = 1;
+
+    /**
+     * Mandatory empty constructor for the fragment manager to instantiate the
+     * fragment (e.g. upon screen orientation changes).
+     */
+    public ShoppingListFragment() {
+    }
+
+    // TODO: Customize parameter initialization
+    @SuppressWarnings("unused")
+    public static ShoppingListFragment newInstance(int columnCount) {
+        ShoppingListFragment fragment = new ShoppingListFragment();
+        Bundle args = new Bundle();
+        args.putInt(ARG_COLUMN_COUNT, columnCount);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        if (getArguments() != null) {
+            mColumnCount = getArguments().getInt(ARG_COLUMN_COUNT);
+        }
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_shopping_item_list, container, false);
+
+        // Set the adapter
+        if (view instanceof RecyclerView) {
+            Context context = view.getContext();
+            RecyclerView recyclerView = (RecyclerView) view;
+            if (mColumnCount <= 1) {
+                recyclerView.setLayoutManager(new LinearLayoutManager(context));
+            } else {
+                recyclerView.setLayoutManager(new GridLayoutManager(context, mColumnCount));
+            }
+            recyclerView.setAdapter(new MyShoppingListRecyclerViewAdapter(DummyContent.ITEMS));
+        }
+        return view;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.room.Room;\r\n\r\nimport com.example.kitchapp.ui.fridge.FridgeFragment;\r\nimport com.example.kitchapp.ui.recipes.RecipesFragment;\r\nimport com.example.kitchapp.ui.settings.SettingsFragment;\r\nimport com.example.kitchapp.ui.shoppinglist.ShoppingListFragment;\r\nimport com.example.kitchapp.ui.suggestion.SuggestionScreen;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    public static FragmentManager fragmentManager;\r\n    public static RoomDatabaseClass roomDatabaseClass;\r\n    //  TODO: it is activity solution\r\n    private final BottomNavigationView.OnNavigationItemSelectedListener navListener =\r\n            new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n                @Override\r\n                public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                    Fragment selectedFragment = null;\r\n                    switch (item.getItemId()) {\r\n                        case R.id.dislikeButton:\r\n                            selectedFragment = new FridgeFragment();\r\n                            break;\r\n\r\n                        case R.id.shoppingListScreenFragment:\r\n                            // Intent intent1 = new Intent(MainActivity.this, ShoppingListScreenFragment.class);\r\n                            //   startActivity(intent1);\r\n                            selectedFragment = new ShoppingListFragment();\r\n                            break;\r\n\r\n                        case R.id.suggestionScreen:\r\n                            //     Intent intent2 = new Intent(MainActivity.this, SuggestionScreen.class);\r\n                            //  startActivity(intent2);\r\n                            selectedFragment = new SuggestionScreen();\r\n                            break;\r\n                        case R.id.recipesFragment:\r\n                            //      Intent intent3 = new Intent(MainActivity.this, RecipesFragment.class);\r\n                            //     startActivity(intent3);\r\n                            selectedFragment = new RecipesFragment();\r\n                            break;\r\n\r\n                        case R.id.settingsFragment:\r\n                            selectedFragment = new SettingsFragment();\r\n                            //   Intent intent4 = new Intent(MainActivity.this, SettingsFragment.class);\r\n                            //   startActivity(intent4);\r\n                            break;\r\n                    }\r\n                    fragmentManager.beginTransaction().replace(R.id.Container, selectedFragment).commit();\r\n                    return true;\r\n                }\r\n            };\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        fragmentManager = getSupportFragmentManager();\r\n        roomDatabaseClass = Room.databaseBuilder(getApplicationContext(), RoomDatabaseClass.class\r\n                , \"mydb\").allowMainThreadQueries().build();\r\n        fragmentManager = getSupportFragmentManager();\r\n\r\n        BottomNavigationView bottomNav = findViewById(R.id.bottomNavigationView);\r\n        bottomNav.setOnNavigationItemSelectedListener(navListener);\r\n        fragmentManager.beginTransaction().replace(R.id.Container, new FridgeFragment()).commit();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/MainActivity.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/MainActivity.java	(date 1608928494068)
@@ -1,10 +1,11 @@
 package com.example.kitchapp;
 
-import android.os.Bundle;
-import android.view.MenuItem;
-
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.view.MenuItem;
+
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.room.Room;
@@ -12,67 +13,70 @@
 import com.example.kitchapp.ui.fridge.FridgeFragment;
 import com.example.kitchapp.ui.recipes.RecipesFragment;
 import com.example.kitchapp.ui.settings.SettingsFragment;
-import com.example.kitchapp.ui.shoppinglist.ShoppingListFragment;
-import com.example.kitchapp.ui.suggestion.SuggestionScreen;
+import com.example.kitchapp.ui.shoppinglist.ShoppingListScreenFragment;
+import com.example.kitchapp.ui.suggestion.tabs.SuggestionScreen;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 
+import java.util.ArrayList;
+
 public class MainActivity extends AppCompatActivity {
 
     public static FragmentManager fragmentManager;
     public static RoomDatabaseClass roomDatabaseClass;
-    //  TODO: it is activity solution
-    private final BottomNavigationView.OnNavigationItemSelectedListener navListener =
-            new BottomNavigationView.OnNavigationItemSelectedListener() {
-                @Override
-                public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-                    Fragment selectedFragment = null;
-                    switch (item.getItemId()) {
-                        case R.id.dislikeButton:
-                            selectedFragment = new FridgeFragment();
-                            break;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+        fragmentManager = getSupportFragmentManager();
+        roomDatabaseClass = Room.databaseBuilder(getApplicationContext(), RoomDatabaseClass.class
+                , "mydb").allowMainThreadQueries().build();
+
+        BottomNavigationView bottomNav = findViewById(R.id.bottomNavigationView);
+        bottomNav.setOnNavigationItemSelectedListener(navListener);
+        getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new FridgeFragment()).commit();
+    }
+
+
+       //  TODO: it is activity solution
+     private  BottomNavigationView.OnNavigationItemSelectedListener navListener =
+        new BottomNavigationView.OnNavigationItemSelectedListener() {
+            @Override
+            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+                Fragment selectedFragment = null;
+                switch (item.getItemId()) {
+                    case R.id.fridgeFragment:
+                        selectedFragment = new FridgeFragment();
+                        break;
 
-                        case R.id.shoppingListScreenFragment:
-                            // Intent intent1 = new Intent(MainActivity.this, ShoppingListScreenFragment.class);
-                            //   startActivity(intent1);
-                            selectedFragment = new ShoppingListFragment();
-                            break;
+                    case R.id.shoppingListScreenFragment:
+                       // Intent intent1 = new Intent(MainActivity.this, ShoppingListScreenFragment.class);
+                     //   startActivity(intent1);
+                        selectedFragment = new ShoppingListScreenFragment();
+                        break;
 
-                        case R.id.suggestionScreen:
-                            //     Intent intent2 = new Intent(MainActivity.this, SuggestionScreen.class);
-                            //  startActivity(intent2);
-                            selectedFragment = new SuggestionScreen();
-                            break;
-                        case R.id.recipesFragment:
-                            //      Intent intent3 = new Intent(MainActivity.this, RecipesFragment.class);
-                            //     startActivity(intent3);
-                            selectedFragment = new RecipesFragment();
-                            break;
+                    case R.id.suggestionScreen:
+                   //     Intent intent2 = new Intent(MainActivity.this, SuggestionScreen.class);
+                      //  startActivity(intent2);
+                        selectedFragment = new SuggestionScreen();
+                        break;
+                    case R.id.recipesFragment:
+                  //      Intent intent3 = new Intent(MainActivity.this, RecipesFragment.class);
+                   //     startActivity(intent3);
+                        selectedFragment = new RecipesFragment();
+                        break;
 
-                        case R.id.settingsFragment:
-                            selectedFragment = new SettingsFragment();
-                            //   Intent intent4 = new Intent(MainActivity.this, SettingsFragment.class);
-                            //   startActivity(intent4);
-                            break;
-                    }
-                    fragmentManager.beginTransaction().replace(R.id.Container, selectedFragment).commit();
-                    return true;
-                }
-            };
+                    case R.id.settingsFragment:
+                        selectedFragment = new SettingsFragment();
+                        //   Intent intent4 = new Intent(MainActivity.this, SettingsFragment.class);
+                     //   startActivity(intent4);
+                        break;
+                }
+                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,selectedFragment).commit();
+           return true;
+            }
+        };
 
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-
-        fragmentManager = getSupportFragmentManager();
-        roomDatabaseClass = Room.databaseBuilder(getApplicationContext(), RoomDatabaseClass.class
-                , "mydb").allowMainThreadQueries().build();
-        fragmentManager = getSupportFragmentManager();
-
-        BottomNavigationView bottomNav = findViewById(R.id.bottomNavigationView);
-        bottomNav.setOnNavigationItemSelectedListener(navListener);
-        fragmentManager.beginTransaction().replace(R.id.Container, new FridgeFragment()).commit();
-    }
-
 
 }
Index: app/src/main/java/com/example/kitchapp/IngredientList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic abstract class IngredientList {\r\n    protected ArrayList<Ingredient> list;\r\n\r\n    public IngredientList() {\r\n        list = new ArrayList<Ingredient>();\r\n    }\r\n\r\n    public boolean add(Ingredient ingredient, int number) {\r\n        //If there is already this ingredient\r\n        for (int i = 0; i <= list.size() - 1; i++) {\r\n            if (list.get(i).getName().equalsIgnoreCase(ingredient.getName())) {\r\n                list.get(i).setNumber(list.get(i).getNumber() + number);\r\n                return true;\r\n            }\r\n        }\r\n        //If there is not this ingredient\r\n        ingredient.setNumber(number);\r\n        list.add(ingredient);\r\n        return true;\r\n    }\r\n\r\n    public boolean eat(Ingredient ingredient, int number) {\r\n        for (int i = 0; i < list.size(); i++) {\r\n            if (list.get(i).getName().equalsIgnoreCase(ingredient.getName())) {\r\n                //If there isn't any left after eat\r\n                // fixed error -Emre\r\n                if (list.get(i).getNumber() == 0)\r\n                    list.remove(i);\r\n                else\r\n                    list.get(i).setNumber(list.get(i).getNumber() - number);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * -Burak~ It helps when you do not want to mess with number.\r\n     *\r\n     * @param name Name of the Ingredient that will be searched.\r\n     * @return Ingredient if it finded, null vice-versa.\r\n     */\r\n    public Ingredient findByName(String name) {\r\n\r\n        for (int i = 0; i < list.size(); i++) {\r\n            if (name.equals(list.get(i).getName()))\r\n                return list.get(i);\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/IngredientList.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/IngredientList.java	(date 1608928494067)
@@ -5,15 +5,15 @@
 public abstract class IngredientList {
     protected ArrayList<Ingredient> list;
 
-    public IngredientList() {
+    public IngredientList (){
         list = new ArrayList<Ingredient>();
     }
 
-    public boolean add(Ingredient ingredient, int number) {
+    public boolean add( Ingredient ingredient , int number ){
         //If there is already this ingredient
-        for (int i = 0; i <= list.size() - 1; i++) {
-            if (list.get(i).getName().equalsIgnoreCase(ingredient.getName())) {
-                list.get(i).setNumber(list.get(i).getNumber() + number);
+        for(int i = 0; i <= list.size()-1; i++){
+            if(list.get(i).getName().equalsIgnoreCase(ingredient.getName())){
+                list.get(i).setNumber( list.get(i).getNumber() + number );
                 return true;
             }
         }
@@ -23,15 +23,15 @@
         return true;
     }
 
-    public boolean eat(Ingredient ingredient, int number) {
-        for (int i = 0; i < list.size(); i++) {
-            if (list.get(i).getName().equalsIgnoreCase(ingredient.getName())) {
+    public boolean eat(Ingredient ingredient , int number){
+        for(int i = 0; i < list.size(); i++){
+            if(list.get(i).getName().equalsIgnoreCase(ingredient.getName())){
                 //If there isn't any left after eat
                 // fixed error -Emre
-                if (list.get(i).getNumber() == 0)
+                if(list.get(i).getNumber()==0)
                     list.remove(i);
                 else
-                    list.get(i).setNumber(list.get(i).getNumber() - number);
+                    list.get(i).setNumber( list.get(i).getNumber() - number );
                 return true;
             }
         }
@@ -40,14 +40,13 @@
 
     /**
      * -Burak~ It helps when you do not want to mess with number.
-     *
      * @param name Name of the Ingredient that will be searched.
      * @return Ingredient if it finded, null vice-versa.
      */
-    public Ingredient findByName(String name) {
+    public Ingredient findByName(String name){
 
-        for (int i = 0; i < list.size(); i++) {
-            if (name.equals(list.get(i).getName()))
+        for( int i = 0 ; i < list.size() ; i++ ){
+            if( name.equals( list.get(i).getName() ) )
                 return list.get(i);
         }
 
Index: app/src/main/java/com/example/kitchapp/MainActivity2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/MainActivity2.java	(date 1608928494069)
+++ app/src/main/java/com/example/kitchapp/MainActivity2.java	(date 1608928494069)
@@ -0,0 +1,21 @@
+package com.example.kitchapp;
+
+import android.os.Bundle;
+
+import com.google.android.material.floatingactionbutton.FloatingActionButton;
+import com.google.android.material.snackbar.Snackbar;
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+
+import android.view.View;
+
+public class MainActivity2 extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main2);
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/ui/shoppinglist/ShoppingListScreenFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/shoppinglist/ShoppingListScreenFragment.java	(date 1608928494076)
+++ app/src/main/java/com/example/kitchapp/ui/shoppinglist/ShoppingListScreenFragment.java	(date 1608928494076)
@@ -0,0 +1,27 @@
+package com.example.kitchapp.ui.shoppinglist;
+
+import android.content.Context;
+import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.example.kitchapp.R;
+import com.example.kitchapp.dummy.DummyContent;
+
+public class ShoppingListScreenFragment extends Fragment {
+
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_shoppinglist_list, container, false);
+        return view;
+    }
+}
Index: app/src/main/java/com/example/kitchapp/ui/suggestion/SuggestionScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp.ui.suggestion;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TabHost;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.kitchapp.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link SuggestionScreen#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class SuggestionScreen extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n    //ImageButton tick = rootView.R.id.suggestion_tick_button;\r\n    TabHost tab;\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public SuggestionScreen() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment SuggestionScreen.\r\n     */\r\n\r\n    /*\r\n    // TODO: Rename and change types and number of parameters\r\n    public static SuggestionScreen newInstance(String param1, String param2) {\r\n        SuggestionScreen fragment = new SuggestionScreen();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }*/\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        //TextView textView = (TextView)findViewById(R.id.timeText);\r\n        //textView.setText(\"Deneme\");\r\n        //setContentView(R.layout.fragment_suggestion_screen);\r\n\r\n\r\n        /*Trying to add functional tabs\r\n        tab=(TabHost)findViewById(R.id.tabs);\r\n        tab.setup();\r\n        TabHost.TabSpec s1=tab.newTabSpec(\"Sayfa-1\");\r\n        TabHost.TabSpec s2=tab.newTabSpec(\"Sayfa-2\");\r\n\r\n        s1.setContent(R.id.Ingredients);\r\n        s2.setContent(R.id.tab2);\r\n        s1.setIndicator(\"Sayfa-1\");\r\n        s2.setIndicator(\"Sayfa-2\");\r\n        tab.addTab(s1);\r\n        tab.addTab(s2);\r\n        */\r\n        /*\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }*/\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        TextView timeText = view.findViewById(R.id.timeText);\r\n        timeText.setText(\"20min\");\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n\r\n        return inflater.inflate(R.layout.fragment_suggestion_screen, container, false);\r\n        //TextView textView = textView.findViewById(R.id.timeText);\r\n        //textView.setText(\"Deneme\");\r\n        //setContentView(R.layout.fragment_suggestion_screen);\r\n\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/suggestion/SuggestionScreen.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/suggestion/tabs/SuggestionScreen.java	(date 1608928494110)
@@ -1,16 +1,17 @@
-package com.example.kitchapp.ui.suggestion;
+package com.example.kitchapp.ui.suggestion.tabs;
 
 import android.os.Bundle;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TabHost;
 import android.widget.TextView;
 
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-
 import com.example.kitchapp.R;
 
 /**
@@ -18,17 +19,18 @@
  * Use the {@link SuggestionScreen#newInstance} factory method to
  * create an instance of this fragment.
  */
-public class SuggestionScreen extends Fragment {
+public class SuggestionScreen extends Fragment{
 
     // TODO: Rename parameter arguments, choose names that match
     // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
     private static final String ARG_PARAM1 = "param1";
     private static final String ARG_PARAM2 = "param2";
     //ImageButton tick = rootView.R.id.suggestion_tick_button;
-    TabHost tab;
+
     // TODO: Rename and change types of parameters
     private String mParam1;
     private String mParam2;
+    TabHost tab;
 
     public SuggestionScreen() {
         // Required empty public constructor
@@ -53,6 +55,7 @@
         fragment.setArguments(args);
         return fragment;
     }*/
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
 
Index: app/src/main/java/com/example/kitchapp/ui/recipes/MyRecipeRecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/recipes/MyRecipeRecyclerViewAdapter.java	(date 1608928494073)
+++ app/src/main/java/com/example/kitchapp/ui/recipes/MyRecipeRecyclerViewAdapter.java	(date 1608928494073)
@@ -0,0 +1,64 @@
+package com.example.kitchapp.ui.recipes;
+
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.example.kitchapp.R;
+import com.example.kitchapp.dummy.DummyContent.DummyItem;
+
+import java.util.List;
+
+/**
+ * {@link RecyclerView.Adapter} that can display a {@link DummyItem}.
+ * TODO: Replace the implementation with code for your data type.
+ */
+public class MyRecipeRecyclerViewAdapter extends RecyclerView.Adapter<MyRecipeRecyclerViewAdapter.ViewHolder> {
+
+    private final List<DummyItem> mValues;
+
+    public MyRecipeRecyclerViewAdapter(List<DummyItem> items) {
+        mValues = items;
+    }
+
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        View view = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.fragment_recipes, parent, false);
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void onBindViewHolder(final ViewHolder holder, int position) {
+        holder.mItem = mValues.get(position);
+      //  holder.mIdView.setText(mValues.get(position).id);
+        holder.mContentView.setText(mValues.get(position).content);
+    }
+
+    @Override
+    public int getItemCount() {
+        return mValues.size();
+    }
+
+    public class ViewHolder extends RecyclerView.ViewHolder {
+        public final View mView;
+      //  public final TextView mIdView;
+        public final TextView mContentView;
+        public DummyItem mItem;
+
+        public ViewHolder(View view) {
+            super(view);
+            mView = view;
+          //  mIdView = (TextView) view.findViewById(R.id.item_number);
+            mContentView = (TextView) view.findViewById(R.id.content);
+        }
+
+        @Override
+        public String toString() {
+            return super.toString() + " '" + mContentView.getText() + "'";
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/kitchapp/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport android.media.Image;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * @version 10/12/2020\r\n * @authors Burak, Tarik...\r\n */\r\n\r\npublic class User {\r\n\r\n    //VARIABLES\r\n    private String name;\r\n    private ArrayList<Recipe> undesiredMeals;\r\n    private Image profilePhoto;\r\n    private boolean isVegetarian;\r\n    private ArrayList<Ingredient> allergiesList;\r\n    private String password;\r\n\r\n    //CONSTRUCTORS\r\n    public User(String name, String password) {\r\n        this.name = name;\r\n        this.password = password;\r\n    }\r\n\r\n    //Everything is specified\r\n    public User(String name,\r\n                ArrayList<Recipe> undesiredMeals,\r\n                Image profilePhoto,\r\n                boolean isVegetarian,\r\n                ArrayList<Ingredient> allergiesList) {\r\n        this.name = name;\r\n        this.undesiredMeals = undesiredMeals;\r\n        this.profilePhoto = profilePhoto;\r\n        this.isVegetarian = isVegetarian;\r\n        this.allergiesList = allergiesList;\r\n    }\r\n\r\n    //undesiredMeals is not specified.\r\n    public User(String name,\r\n                Image profilePhoto,\r\n                boolean isVegetarian,\r\n                ArrayList<Ingredient> allergiesList) {\r\n        this.name = name;\r\n        this.profilePhoto = profilePhoto;\r\n        this.isVegetarian = isVegetarian;\r\n        this.allergiesList = allergiesList;\r\n    }\r\n\r\n    //undesiredMeals and allergiesList are not specified.\r\n    public User(String name, Image profilePhoto, boolean isVegetarian) {\r\n        this.name = name;\r\n        this.profilePhoto = profilePhoto;\r\n        this.isVegetarian = isVegetarian;\r\n    }\r\n\r\n    //GETTERS AND SETTERS\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public ArrayList<Recipe> getUndesiredMeals() {\r\n        return undesiredMeals;\r\n    }\r\n\r\n    public void setUndesiredMeals(ArrayList<Recipe> undesiredMeals) {\r\n        this.undesiredMeals = undesiredMeals;\r\n    }\r\n\r\n    public Image getProfilePhoto() {\r\n        return profilePhoto;\r\n    }\r\n\r\n    public void setProfilePhoto(Image profilePhoto) {\r\n        this.profilePhoto = profilePhoto;\r\n    }\r\n\r\n    public boolean isVegetarian() {\r\n        return isVegetarian;\r\n    }\r\n\r\n    public void setVegetarian(boolean vegetarian) {\r\n        isVegetarian = vegetarian;\r\n    }\r\n\r\n    public ArrayList<Ingredient> getAllergiesList() {\r\n        return allergiesList;\r\n    }\r\n\r\n    public void setAllergiesList(ArrayList<Ingredient> allergiesList) {\r\n        this.allergiesList = allergiesList;\r\n    }\r\n\r\n    //METHODS\r\n\r\n    /**\r\n     * Adds the given meal to the undesired list so it will not suggested to this user.\r\n     *\r\n     * @param disliked Disliked meal\r\n     */\r\n    public void dislikeMeal(Recipe disliked) {\r\n        if (!undesiredMeals.contains(disliked))\r\n            undesiredMeals.add(disliked);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/User.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/User.java	(date 1608928494073)
@@ -5,8 +5,8 @@
 import java.util.ArrayList;
 
 /**
- * @version 10/12/2020
  * @authors Burak, Tarik...
+ * @version 10/12/2020
  */
 
 public class User {
@@ -20,17 +20,16 @@
     private String password;
 
     //CONSTRUCTORS
-    public User(String name, String password) {
-        this.name = name;
-        this.password = password;
+    public User (String name,String password){
+    this.name = name;
+    this.password = password;
     }
-
     //Everything is specified
-    public User(String name,
-                ArrayList<Recipe> undesiredMeals,
-                Image profilePhoto,
-                boolean isVegetarian,
-                ArrayList<Ingredient> allergiesList) {
+    public User( String name,
+                 ArrayList<Recipe> undesiredMeals,
+                 Image profilePhoto,
+                 boolean isVegetarian,
+                 ArrayList<Ingredient> allergiesList ) {
         this.name = name;
         this.undesiredMeals = undesiredMeals;
         this.profilePhoto = profilePhoto;
@@ -39,10 +38,10 @@
     }
 
     //undesiredMeals is not specified.
-    public User(String name,
-                Image profilePhoto,
-                boolean isVegetarian,
-                ArrayList<Ingredient> allergiesList) {
+    public User( String name,
+                 Image profilePhoto,
+                 boolean isVegetarian,
+                 ArrayList<Ingredient> allergiesList ) {
         this.name = name;
         this.profilePhoto = profilePhoto;
         this.isVegetarian = isVegetarian;
@@ -61,11 +60,11 @@
         return name;
     }
 
-    public void setName(String name) {
+    public void setName( String name ) {
         this.name = name;
     }
 
-    public void setPassword(String password) {
+    public void setPassword( String password) {
         this.password = password;
     }
 
@@ -73,7 +72,7 @@
         return undesiredMeals;
     }
 
-    public void setUndesiredMeals(ArrayList<Recipe> undesiredMeals) {
+    public void setUndesiredMeals( ArrayList<Recipe> undesiredMeals ) {
         this.undesiredMeals = undesiredMeals;
     }
 
@@ -81,7 +80,7 @@
         return profilePhoto;
     }
 
-    public void setProfilePhoto(Image profilePhoto) {
+    public void setProfilePhoto( Image profilePhoto ) {
         this.profilePhoto = profilePhoto;
     }
 
@@ -89,7 +88,7 @@
         return isVegetarian;
     }
 
-    public void setVegetarian(boolean vegetarian) {
+    public void setVegetarian( boolean vegetarian ) {
         isVegetarian = vegetarian;
     }
 
@@ -97,20 +96,18 @@
         return allergiesList;
     }
 
-    public void setAllergiesList(ArrayList<Ingredient> allergiesList) {
+    public void setAllergiesList( ArrayList<Ingredient> allergiesList ) {
         this.allergiesList = allergiesList;
     }
 
     //METHODS
-
     /**
      * Adds the given meal to the undesired list so it will not suggested to this user.
-     *
      * @param disliked Disliked meal
      */
-    public void dislikeMeal(Recipe disliked) {
-        if (!undesiredMeals.contains(disliked))
-            undesiredMeals.add(disliked);
+    public void dislikeMeal( Recipe disliked ){
+        if(!undesiredMeals.contains(disliked))
+            undesiredMeals.add( disliked );
     }
 
 }
Index: app/src/main/java/com/example/kitchapp/ui/recipes/MyRecipeListRecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/recipes/MyRecipeListRecyclerViewAdapter.java	(date 1608928494073)
+++ app/src/main/java/com/example/kitchapp/ui/recipes/MyRecipeListRecyclerViewAdapter.java	(date 1608928494073)
@@ -0,0 +1,129 @@
+package com.example.kitchapp.ui.recipes;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageButton;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.kitchapp.Ingredient;
+
+
+import com.example.kitchapp.Recipe;
+import com.example.kitchapp.RecipeList;
+import com.example.kitchapp.MainActivity;
+import com.example.kitchapp.R;
+
+import java.util.List;
+/**
+public class MyRecipeListRecyclerViewAdapter extends RecyclerView.Adapter<RecyclerAdapter.FridgeViewHolder> {{
+
+        private final List<Recipe> list;
+
+        public RecyclerAdapter(List<Recipe> items) {
+            list = items;
+        }
+
+        @NonNull
+        @Override
+        public FridgeViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View view = LayoutInflater.from(parent.getContext())
+                    .inflate(R.layout.fragment_fridge_item, parent, false);
+            FridgeViewHolder fridgeViewHolder = new FridgeViewHolder(view);
+            return fridgeViewHolder;
+        }
+
+        @Override
+        public void onBindViewHolder(final FridgeViewHolder holder, int position) {
+            holder.ingredient = list.get(position);
+            holder.tvName.setText(list.get(position).getName());
+            holder.tvNumber.setText(   Integer.toString(list.get(position).getNumber()) );
+        }
+
+        @Override
+        public int getItemCount() {
+            return list.size();
+        }
+
+        public class FridgeViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+            public final TextView tvName;
+            public final TextView tvNumber;
+            public Ingredient ingredient;
+            public ImageButton btDelete, plusButton, minusButton;
+
+            public FridgeViewHolder(View view) {
+                super(view);
+                tvName = (TextView) view.findViewById(R.id.fridge_item_name);
+                tvNumber = (TextView) view.findViewById(R.id.fridge_item_number);
+                btDelete = view.findViewById(R.id.fridgeDeleteButton);
+                plusButton = view.findViewById(R.id.plusButton);
+                minusButton = view.findViewById(R.id.minusButton);
+                btDelete.setOnClickListener(this);
+                plusButton.setOnClickListener(this);
+                minusButton.setOnClickListener(this);
+            }
+
+            public TextView getTvName() {
+                return tvName;
+            }
+
+            public TextView getTvNumber() {
+                return tvNumber;
+            }
+
+            public Ingredient getIngredient() {
+                return ingredient;
+            }
+
+            @Override
+            public String toString() {
+                return super.toString() + "'" + tvName.getText() + "'"
+                        + " '" + tvNumber.getText() + "'";
+            }
+
+            @Override
+            public void onClick(View v) {
+                Ingredient ingredient;
+                int ID, number;
+                String name;
+                ingredient = new Ingredient();
+                ID = list.get(getAdapterPosition()).getId();
+                name = list.get(getAdapterPosition()).getName();
+                number = list.get(getAdapterPosition()).getNumber();
+                ingredient.setId(ID);
+                ingredient.setName(name);
+                ingredient.setNumber(number);
+
+                switch (v.getId())
+                {
+                    case (R.id.fridgeDeleteButton):
+                        MainActivity.roomDatabaseClass.ingredientDao().deleteIngredient(ingredient);
+                        MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
+                                new FridgeFragment(), null).commit();
+                        break;
+                    case (R.id.plusButton):
+                        number++;
+                        ingredient.setNumber(number);
+                        MainActivity.roomDatabaseClass.ingredientDao().updateIngredient(ingredient);
+                        MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
+                                new FridgeFragment(), null).commit();
+                        break;
+                    case (R.id.minusButton):
+                        number--;
+                        ingredient.setNumber(number);
+                        MainActivity.roomDatabaseClass.ingredientDao().updateIngredient(ingredient);
+                        MainActivity.fragmentManager.beginTransaction().replace(R.id.Container,
+                                new FridgeFragment(), null).commit();
+                        break;
+
+                }
+
+
+
+
+            }
+        }**/
+
Index: app/src/main/java/com/example/kitchapp/ui/recipes/RecipeScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/recipes/RecipeScreen.java	(date 1608928494073)
+++ app/src/main/java/com/example/kitchapp/ui/recipes/RecipeScreen.java	(date 1608928494073)
@@ -0,0 +1,21 @@
+package com.example.kitchapp.ui.recipes;
+
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+
+import com.example.kitchapp.R;
+
+
+public class RecipeScreen extends Fragment {
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_recipes, container, false);
+        return view;
+    }
+}
+
+
Index: app/src/main/java/com/example/kitchapp/ui/fridge/AddDataFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp.ui.fridge;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.kitchapp.Ingredient;\r\nimport com.example.kitchapp.MainActivity;\r\nimport com.example.kitchapp.R;\r\n\r\npublic class AddDataFragment extends Fragment {\r\n\r\n    private EditText inputName, inputNumber;\r\n    private Button btSave;\r\n\r\n    public AddDataFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_add_data, container, false);\r\n\r\n        inputName = view.findViewById(R.id.inputName);\r\n        inputNumber = view.findViewById(R.id.inputNumber);\r\n        btSave = view.findViewById(R.id.buttonSave);\r\n\r\n        btSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String name = inputName.getText().toString();\r\n                int number = Integer.parseInt(inputNumber.getText().toString());\r\n\r\n                Ingredient ingredient = new Ingredient();\r\n                ingredient.setName(name);\r\n                ingredient.setNumber(number);\r\n\r\n                MainActivity.roomDatabaseClass.ingredientDao().addIngredient(ingredient);\r\n                Toast.makeText(getActivity(), \"Succesfully saved.\", Toast.LENGTH_LONG).show();\r\n                inputName.setText(\"\");\r\n                inputNumber.setText(\"\");\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/kitchapp/ui/fridge/AddDataFragment.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/ui/recipes/lookIntoRecipes.java	(date 1608928494112)
@@ -1,4 +1,4 @@
-package com.example.kitchapp.ui.fridge;
+package com.example.kitchapp.ui.recipes;
 
 import android.os.Bundle;
 import android.view.LayoutInflater;
@@ -6,6 +6,9 @@
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.fragment.app.Fragment;
@@ -14,12 +17,13 @@
 import com.example.kitchapp.MainActivity;
 import com.example.kitchapp.R;
 
-public class AddDataFragment extends Fragment {
+public class lookIntoRecipes extends Fragment {
 
-    private EditText inputName, inputNumber;
-    private Button btSave;
+    private TextView recipeName,recipeItself;
+    private ImageView photo;
+    private Button eat;
 
-    public AddDataFragment() {
+    public lookIntoRecipes() {
         // Required empty public constructor
     }
 
@@ -27,17 +31,18 @@
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         // Inflate the layout for this fragment
-        View view = inflater.inflate(R.layout.fragment_add_data, container, false);
+        View view = inflater.inflate(R.layout.fragment_recipes, container, false);
 
-        inputName = view.findViewById(R.id.inputName);
-        inputNumber = view.findViewById(R.id.inputNumber);
-        btSave = view.findViewById(R.id.buttonSave);
+        recipeName = view.findViewById(R.id.textView19);
+        recipeItself = view.findViewById(R.id.textView20);
+        photo = view.findViewById(R.id.imageView2);
+        eat = view.findViewById(R.id.button2);
 
-        btSave.setOnClickListener(new View.OnClickListener() {
-            @Override
+        /**eat.setOnClickListener(new View.OnClickListener() {
+           @Override
             public void onClick(View v) {
                 String name = inputName.getText().toString();
-                int number = Integer.parseInt(inputNumber.getText().toString());
+                int number =  Integer.parseInt( inputNumber.getText().toString() );
 
                 Ingredient ingredient = new Ingredient();
                 ingredient.setName(name);
@@ -49,7 +54,8 @@
                 inputNumber.setText("");
             }
         });
-
+**/
         return view;
-    }
-}
\ No newline at end of file
+
+        }
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.kitchapp\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/AndroidManifest.xml	(date 1608928494063)
@@ -9,6 +9,10 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
+        <activity
+            android:name=".MainActivity2"
+            android:label="@string/title_activity_main2"
+            android:theme="@style/AppTheme.NoActionBar"></activity>
         <activity android:name=".MainActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
Index: app/src/main/res/navigation/nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/nav_graph\"\r\n    app:startDestination=\"@id/FirstFragment\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/FirstFragment\"\r\n        android:name=\"com.example.kitchapp.FirstFragment\"\r\n        android:label=\"@string/first_fragment_label\"\r\n        tools:layout=\"@layout/fragment_first\">\r\n\r\n        <action\r\n            android:id=\"@+id/action_FirstFragment_to_SecondFragment\"\r\n            app:destination=\"@id/SecondFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/SecondFragment\"\r\n        android:name=\"com.example.kitchapp.SecondFragment\"\r\n        android:label=\"@string/second_fragment_label\"\r\n        tools:layout=\"@layout/fragment_second\">\r\n\r\n        <action\r\n            android:id=\"@+id/action_SecondFragment_to_FirstFragment\"\r\n            app:destination=\"@id/FirstFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/recipesFragment2\"\r\n        android:name=\"com.example.kitchapp.RecipesFragment\"\r\n        android:label=\"fragment_recipes_list2\"\r\n        tools:layout=\"@layout/fragment_recipes_list2\" />\r\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/navigation/nav_graph.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/navigation/nav_graph.xml	(date 1608928494093)
@@ -25,9 +25,4 @@
             android:id="@+id/action_SecondFragment_to_FirstFragment"
             app:destination="@id/FirstFragment" />
     </fragment>
-    <fragment
-        android:id="@+id/recipesFragment2"
-        android:name="com.example.kitchapp.RecipesFragment"
-        android:label="fragment_recipes_list2"
-        tools:layout="@layout/fragment_recipes_list2" />
 </navigation>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"AndroidDomInspection\" enabled=\"false\" level=\"ERROR\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"FieldCanBeLocal\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"EXCLUDE_ANNOS\">\r\n        <value>\r\n          <list size=\"1\">\r\n            <item index=\"0\" class=\"java.lang.String\" itemvalue=\"androidx.room.PrimaryKey\" />\r\n          </list>\r\n        </value>\r\n      </option>\r\n      <option name=\"IGNORE_FIELDS_USED_IN_MULTIPLE_METHODS\" value=\"true\" />\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ .idea/inspectionProfiles/Project_Default.xml	(date 1608928494062)
@@ -2,15 +2,9 @@
   <profile version="1.0">
     <option name="myName" value="Project Default" />
     <inspection_tool class="AndroidDomInspection" enabled="false" level="ERROR" enabled_by_default="false" />
-    <inspection_tool class="FieldCanBeLocal" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="EXCLUDE_ANNOS">
-        <value>
-          <list size="1">
-            <item index="0" class="java.lang.String" itemvalue="androidx.room.PrimaryKey" />
-          </list>
-        </value>
-      </option>
-      <option name="IGNORE_FIELDS_USED_IN_MULTIPLE_METHODS" value="true" />
+    <inspection_tool class="ConstantConditions" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="SUGGEST_NULLABLE_ANNOTATIONS" value="false" />
+      <option name="DONT_REPORT_TRUE_ASSERT_STATEMENTS" value="false" />
     </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/UserCreate\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.signup.SignUp\">\r\n\r\n    <com.google.android.material.textfield.TextInputLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"64dp\"\r\n        android:layout_marginTop=\"40dp\"\r\n        android:layout_marginEnd=\"64dp\"\r\n        android:layout_marginBottom=\"32dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/linearLayout\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <com.google.android.material.textfield.TextInputEditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:hint=\"Username\" />\r\n    </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginStart=\"64dp\"\r\n        android:layout_marginTop=\"128dp\"\r\n        android:layout_marginEnd=\"64dp\"\r\n        android:layout_marginBottom=\"448dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_weight=\"1\"\r\n            android:foregroundGravity=\"center\"\r\n            tools:src=\"@tools:sample/avatars\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_weight=\"1\"\r\n            android:foregroundGravity=\"center\"\r\n            tools:src=\"@tools:sample/avatars\" />\r\n    </LinearLayout>\r\n\r\n    <RadioGroup\r\n        android:id=\"@+id/radiogroup\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"384dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/linearLayout\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/linearLayout\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout\">\r\n\r\n        <RadioButton\r\n            android:id=\"@+id/radioButton7\"\r\n            style=\"@style/Widget.AppCompat.CompoundButton.RadioButton\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:paddingStart=\"10dp\"\r\n            android:paddingTop=\"5dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:paddingBottom=\"5dp\"\r\n            android:text=\"MaleButton\"\r\n            android:textAlignment=\"center\" />\r\n\r\n        <RadioButton\r\n            android:id=\"@+id/radioButton8\"\r\n            style=\"@style/Widget.AppCompat.CompoundButton.RadioButton\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:paddingStart=\"10dp\"\r\n            android:paddingTop=\"5dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:paddingBottom=\"5dp\"\r\n            android:text=\"FemaleButton\"\r\n            android:textAlignment=\"center\" />\r\n    </RadioGroup>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/allergieslinearlayout\"\r\n        android:layout_width=\"195dp\"\r\n        android:layout_height=\"177dp\"\r\n        android:layout_marginStart=\"64dp\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:layout_marginEnd=\"64dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/radiogroup\">\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/checkBox\"\r\n            style=\"@style/Widget.AppCompat.CompoundButton.CheckBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Allergie 1\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/checkBox2\"\r\n            style=\"@style/Widget.AppCompat.CompoundButton.CheckBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Allergie 2\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/checkBox3\"\r\n            style=\"@style/Widget.AppCompat.CompoundButton.CheckBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Allergie 3\" />\r\n    </LinearLayout>\r\n\r\n    <Switch\r\n        android:id=\"@+id/switch1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginStart=\"128dp\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:layout_marginEnd=\"128dp\"\r\n        android:layout_marginBottom=\"106dp\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"Vegan\"\r\n        android:textAlignment=\"center\"\r\n        android:textAllCaps=\"false\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/allergieslinearlayout\" />\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/floatingActionButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginEnd=\"32dp\"\r\n        android:layout_marginBottom=\"32dp\"\r\n        android:backgroundTint=\"#F44336\"\r\n        android:clickable=\"true\"\r\n        android:src=\"@android:drawable/ic_menu_save\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/floatingActionButton2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"32dp\"\r\n        android:layout_marginBottom=\"32dp\"\r\n        android:backgroundTint=\"#FFEB3B\"\r\n        android:clickable=\"true\"\r\n        android:src=\"@android:drawable/ic_menu_help\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_sign_up.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_sign_up.xml	(date 1608928494085)
@@ -37,7 +37,7 @@
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent">
+        app:layout_constraintTop_toTopOf="parent" >
 
         <ImageView
             android:id="@+id/imageView"
Index: app/src/main/res/layout/fragment_recipes_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\r\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\r\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\r\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\r\n    tools:context=\"com.example.kitchapp.searchview.RecipesFragment\">\r\n\r\n\r\n    <ListView\r\n\r\n        android:id=\"@+id/lv1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"682dp\"\r\n        android:layout_below=\"@+id/searchView\"\r\n        android:layout_marginTop=\"1dp\"\r\n        android:divider=\"#ad5\"\r\n        android:dividerHeight=\"2dp\" />\r\n\r\n    <SearchView\r\n        android:id=\"@+id/searchView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:iconifiedByDefault=\"false\"\r\n        android:queryHint=\"Search Here\"\r\n\r\n        />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_recipes_list.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/layout/fragment_recipes_list.xml	(date 1608928494082)
@@ -3,10 +3,10 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
     android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
     android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
     tools:context="com.example.kitchapp.searchview.RecipesFragment">
 
 
Index: app/src/main/java/com/example/kitchapp/IngredientDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kitchapp;\r\n\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface IngredientDao {\r\n\r\n    @Insert\r\n    void addIngredient(Ingredient ingredient);\r\n\r\n    @Query(\"select * from ingredient\")\r\n    List<Ingredient> getIngredient();\r\n\r\n    @Delete\r\n    void deleteIngredient(Ingredient ingredient);\r\n\r\n    @Update\r\n    void updateIngredient(Ingredient ingredient);\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kitchapp/IngredientDao.java	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/java/com/example/kitchapp/IngredientDao.java	(date 1608928494067)
@@ -15,12 +15,11 @@
     void addIngredient(Ingredient ingredient);
 
     @Query("select * from ingredient")
-    List<Ingredient> getIngredient();
+    public List<Ingredient> getIngredient();
 
     @Delete
-    void deleteIngredient(Ingredient ingredient);
+    public void deleteIngredient(Ingredient ingredient);
 
     @Update
-    void updateIngredient(Ingredient ingredient);
-
-}
\ No newline at end of file
+    public void updateIngredient(Ingredient ingredient);
+}
Index: app/src/main/res/menu/bottom_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n        <item\r\n            android:id=\"@+id/dislikeButton\"\r\n            android:title=\"Fridge\"\r\n            android:icon=\"@drawable/ic_fridge\"/>\r\n        <item\r\n            android:id=\"@+id/shoppingListScreenFragment\"\r\n            android:title=\"Shopping List\"\r\n            android:icon=\"@drawable/ic_shoppinglist\"/>\r\n        <item\r\n            android:id=\"@+id/suggestionScreen\"\r\n            android:title=\"Suggestion\"\r\n            android:icon=\"@drawable/ic_suggestion\"/>\r\n        <item\r\n            android:id=\"@+id/recipesFragment\"\r\n            android:title=\"Recipes\"\r\n            android:icon=\"@drawable/ic_recipes\"/>\r\n        <item\r\n            android:id=\"@+id/settingsFragment\"\r\n            android:title=\"Settings\"\r\n            android:icon=\"@drawable/ic_settings\"/>\r\n    </menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/bottom_menu.xml	(revision 2c70bcd831dab2d9cff06eba3fc68f3f8b9c4466)
+++ app/src/main/res/menu/bottom_menu.xml	(date 1608928494089)
@@ -2,7 +2,7 @@
     <menu xmlns:android="http://schemas.android.com/apk/res/android">
 
         <item
-            android:id="@+id/dislikeButton"
+            android:id="@+id/fridgeFragment"
             android:title="Fridge"
             android:icon="@drawable/ic_fridge"/>
         <item
